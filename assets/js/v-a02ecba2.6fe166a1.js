"use strict";(self.webpackChunklearn_data=self.webpackChunklearn_data||[]).push([[1176],{9720:(e,n)=>{n.c=(e,n)=>{const s=e.__vccOpts||e;for(const[e,a]of n)s[e]=a;return s}},4236:(e,n,s)=>{s.r(n),s.d(n,{comp:()=>Ks,data:()=>Fs});var a=s(3968),t=s(4256);const o={href:"https://github.com/huginn/huginn/blob/master/doc/docker/install.md",target:"_blank",rel:"noopener noreferrer"},i={href:"https://github.com/huginn/huginn/blob/master/.env.example",target:"_blank",rel:"noopener noreferrer"},l={href:"https://newzone.top/posts/2018-10-07-huginn_scraping_any_website.html",target:"_blank",rel:"noopener noreferrer"},c=(0,a.QD)("h2",{id:"常用-agent",tabindex:"-1"},[(0,a.QD)("a",{class:"header-anchor",href:"#常用-agent"},[(0,a.QD)("span",null,"常用 Agent")])],-1),r={href:"https://github.com/huginn/huginn/wiki/Agent-Types-&-Descriptions",target:"_blank",rel:"noopener noreferrer"},p=(0,a.IL)("<ul><li><p>Website Agent 解析网页、XML 文档和 json 数据，最常使用</p></li><li><p>Event Formatting Agent 事件信息格式化，可以对收到的信息内容进行格式化，允许添加自定义新内容</p></li><li><p>Phantom Js Cloud Agent 借助 Phantom 抓取动态页面源码，防止部门网站屏蔽爬虫</p></li><li><p>Trigger Agent 监控事件反馈信息的触发器，多用来过滤部分内容</p></li><li><p>De Duplicate Agent 去重</p></li><li><p>Data Output Agent 将数据以 RSS 和 Json 的形式向外部推送</p></li><li><p>Liquid Output Agent 自定义格式数据输出，可以用它创建 HTML 页面，json 数据等</p></li><li><p>Webhook Agent</p></li><li><p>Trigger Agent 监测敏感事件，然后可以用来发送邮件等提醒。</p></li><li><p>Javascript Agent 允许执行自定义的 JS 代码，可以用于个性化操作</p></li><li><p>Digest Agent 汇总节点，收集所有收到的事件再作为一个事件发送出去</p></li><li><p>Email Agent 用邮箱发送最新接收到的讯息</p></li><li><p>Post Agent 可以由其他节点触发，根据固定模板合并事件信息，并以 POST 或 GET 方式向指定的 URL 发起请求</p></li><li><p>Delay Agent 可以作为事件或者副本的暂存器或者缓冲区，统一触发发布</p></li><li><p>Scheduler Agent 定时器节点</p></li><li><p>Attribute Difference Agent 数值差异比较</p></li><li><p>Commander Agent 触发器代理，可以用于向其他节点发起指令控制，控制节点的执行和停止等</p></li></ul>",1),d=(0,a.QD)("code",null,"+",-1),u=(0,a.QD)("code",null,"\\\\",-1),m=(0,a.IL)('<h2 id="huginn-部署" tabindex="-1"><a class="header-anchor" href="#huginn-部署"><span>Huginn 部署</span></a></h2><p>Huginn 的任务有时会卡住，导致后续任务无法进行，重启容器也无法恢复正常。因此，我改为手动部署 Huginn，并定期使用重置命令以防止任务卡住。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /home/huginn/huginn\n<span class="token function">sudo</span> bundle <span class="token builtin class-name">exec</span> rake production:force_stop\n<span class="token function">sudo</span> bundle <span class="token builtin class-name">exec</span> rake production:export\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>服务器重启后，需分行执行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> huginn <span class="token function">bash</span>\n<span class="token function">sudo</span> <span class="token function">service</span> mysql restart\n<span class="token function">sudo</span> <span class="token function">service</span> mysql start\n<span class="token function">sudo</span> <span class="token function">service</span> nginx restart\n<span class="token builtin class-name">cd</span> /home/huginn/huginn\n<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--add</span> safe.directory /home/huginn/huginn\n<span class="token function">sudo</span> runsvdir /etc/service <span class="token operator">&amp;</span>\n<span class="token function">sudo</span> bundle <span class="token builtin class-name">exec</span> rake production:export\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Huginn 经常用到的位置包括 <code>/home/huginn/huginn</code>（<code>env</code> 环境设置）和 <code>/var/lib/mysql</code>（数据库）。为了使这些位置能够在外部存储上工作，需要将外部存储位置的权限设置为 <code>everyone</code>，否则会出现错误。</p><p>需要注意的是，内部数据库默认情况下不会被外部识别。为了使其能够与外部进行连接，需要进行以下操作：</p><ol><li><p>使用 <code>sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf</code> 命令找到 <code>bind-address</code> 行，并注释掉（在行的前面添加 #）：<code>#bind-address = 127.0.0.1</code>。同时，将 <code>max_allowed_packet</code> 设置为 <code>200M</code>。</p></li><li><p>根据连接反馈获取连接 IP 并授权，同时开放 process 权限，方便后期数据库备份。数据库备用可使用 backup_script.sh 脚本，定期将 sql 文件导出到外部存储。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span>\nGRANT ALL PRIVILEGES ON *.* TO <span class="token string">&#39;huginn&#39;</span>@<span class="token string">&#39;172.17.0.1&#39;</span> IDENTIFIED BY <span class="token string">&#39;YourPassword&#39;</span><span class="token punctuation">;</span>\nGRANT PROCESS ON *.* TO <span class="token string">&#39;huginn&#39;</span>@<span class="token string">&#39;localhost&#39;</span><span class="token punctuation">;</span>\nFLUSH PRIVILEGES<span class="token punctuation">;</span>\n<span class="token punctuation">\\</span>q\n<span class="token function">sudo</span> <span class="token function">service</span> mysql restart\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>2 个疑问：</p><ul><li>测试当任务卡住时，<code>rake production:export</code> 是否有效。（优化后，一直没出现卡住问题？）</li><li>部署时 <code>production:export</code> 步骤会提示 <code>unable to lock supervise/lock: temporary failure</code>，但此报错似乎不影响 Huginn 的运行，等有时间看看是否有相关报错。</li></ul><h3 id="ubuntu-手动部署" tabindex="-1"><a class="header-anchor" href="#ubuntu-手动部署"><span>Ubuntu 手动部署</span></a></h3>',11),g={href:"https://github.com/huginn/huginn/blob/master/doc/manual/installation.md",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/huginn/huginn/wiki/Novice-setup-guide",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/huginn/huginn/blob/master/doc/manual/update.md",target:"_blank",rel:"noopener noreferrer"},b=(0,a.IL)('<p>Huginn 部署步骤：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 进入 huginn 容器命令行，某些容器命令为 /bin/bash</span>\n<span class="token function">sudo</span> <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> huginn <span class="token function">bash</span>\n<span class="token comment"># run as root!</span>\n<span class="token function">apt-get</span> update <span class="token parameter variable">-y</span>\n<span class="token function">apt-get</span> upgrade <span class="token parameter variable">-y</span>\n<span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">sudo</span> <span class="token parameter variable">-y</span>\n\n<span class="token comment"># Install vim and set as default editor</span>\n<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">vim</span>\n<span class="token function">sudo</span> update-alternatives <span class="token parameter variable">--set</span> editor /usr/bin/vim.basic\n\n<span class="token comment"># Install the required packages</span>\n<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> runit build-essential <span class="token function">git</span> zlib1g-dev libyaml-dev libssl-dev libgdbm-dev libreadline-dev libncurses5-dev libffi-dev <span class="token function">curl</span> openssh-server checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libicu-dev <span class="token function">logrotate</span> pkg-config cmake nodejs graphviz jq shared-mime-info\n\n<span class="token comment"># Ubuntu 18.04 Bionic</span>\n<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> runit-systemd\n\n<span class="token comment"># Download Ruby and compile it:</span>\n<span class="token function">mkdir</span> /tmp/ruby <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> /tmp/ruby\n<span class="token function">curl</span> <span class="token parameter variable">-L</span> --progress-bar https://cache.ruby-lang.org/pub/ruby/2.7/ruby-2.7.7.tar.bz2 <span class="token operator">|</span> <span class="token function">tar</span> xj\n<span class="token builtin class-name">cd</span> ruby-2.7.7\n./configure --disable-install-rdoc\n<span class="token function">make</span> -j<span class="token variable"><span class="token variable">`</span>nproc<span class="token variable">`</span></span>\n<span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span>\n\n<span class="token comment"># curl -L --progress-bar https://cache.ruby-lang.org/pub/ruby/3.2/ruby-3.2.2.tar.xz | tar xJ</span>\n<span class="token comment"># cd ruby-3.2.2</span>\n\n<span class="token function">sudo</span> gem update <span class="token parameter variable">--system</span> --no-document\n<span class="token function">sudo</span> gem <span class="token function">install</span> foreman --no-document\n\n<span class="token comment"># Create a user for Huginn:</span>\n<span class="token function">sudo</span> adduser --disabled-login <span class="token parameter variable">--gecos</span> <span class="token string">&#39;Huginn&#39;</span> huginn\n\n<span class="token comment"># Install the database packages</span>\n<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> mysql-server mysql-client libmysqlclient-dev\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输入 <code>service mysql start</code> 启动数据库，否则下一步数据库设置容易报错 <code>Can&#39;t connect to local MySQL server through socket &#39;/var/run/mysqld/mysqld.sock&#39;</code>。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 逐步设置数据库 root 密码</span>\n<span class="token function">sudo</span> mysql_secure_installation\n\n<span class="token comment"># 用上方设置的密码登陆数据库</span>\nmysql <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span>\n\n<span class="token comment"># ⚠️逐行输入代码到数据库命令行 `mysql&gt;`，需将 `$password` 替换为你要设置的密码</span>\nCREATE <span class="token environment constant">USER</span> <span class="token string">&#39;huginn&#39;</span>@<span class="token string">&#39;localhost&#39;</span> IDENTIFIED BY <span class="token string">&#39;$password&#39;</span><span class="token punctuation">;</span>\nSET <span class="token assign-left variable">default_storage_engine</span><span class="token operator">=</span>INNODB<span class="token punctuation">;</span>\nGRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER, LOCK TABLES ON <span class="token variable"><span class="token variable">`</span>huginn_production<span class="token variable">`</span></span>.* TO <span class="token string">&#39;huginn&#39;</span>@<span class="token string">&#39;localhost&#39;</span><span class="token punctuation">;</span>\nFLUSH PRIVILEGES<span class="token punctuation">;</span>\n<span class="token punctuation">\\</span>q\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>数据库设置好后，拉取 huginn 主体程序，此段命令可以整段复制到 ssh。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># We&#39;ll install Huginn into the home directory of the user &quot;huginn&quot;</span>\n<span class="token builtin class-name">cd</span> /home/huginn\n\n<span class="token comment"># Clone Huginn repository，不能直接使用 master，避免 ruby 3.2 问题</span>\n<span class="token comment"># sudo -u huginn -H git clone https://github.com/huginn/huginn.git -b master huginn</span>\n<span class="token function">sudo</span> <span class="token parameter variable">-u</span> huginn <span class="token parameter variable">-H</span> <span class="token function">git</span> clone https://github.com/huginn/huginn.git <span class="token parameter variable">-b</span> latest_rubygems huginn\n\n<span class="token comment"># Go to Huginn installation folder</span>\n<span class="token builtin class-name">cd</span> /home/huginn/huginn\n\n<span class="token comment"># Copy the example Huginn config</span>\n<span class="token function">sudo</span> <span class="token parameter variable">-u</span> huginn <span class="token parameter variable">-H</span> <span class="token function">cp</span> .env.example .env\n\n<span class="token comment"># Create the log/, tmp/pids/ and tmp/sockets/ directories</span>\n<span class="token function">sudo</span> <span class="token parameter variable">-u</span> huginn <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> log tmp/pids tmp/sockets\n\n<span class="token comment"># Make sure Huginn can write to the log/ and tmp/ directories</span>\n<span class="token function">sudo</span> <span class="token function">chown</span> <span class="token parameter variable">-R</span> huginn log/ tmp/\n<span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token parameter variable">-R</span> u+rwX,go-w log/ tmp/\n\n<span class="token comment"># Make sure permissions are set correctly</span>\n<span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token parameter variable">-R</span> u+rwX,go-w log/\n<span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token parameter variable">-R</span> u+rwX tmp/\n<span class="token function">sudo</span> <span class="token parameter variable">-u</span> huginn <span class="token parameter variable">-H</span> <span class="token function">chmod</span> o-rwx .env\n\n<span class="token comment"># Copy the example Unicorn config</span>\n<span class="token function">sudo</span> <span class="token parameter variable">-u</span> huginn <span class="token parameter variable">-H</span> <span class="token function">cp</span> config/unicorn.rb.example config/unicorn.rb\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',6),k=(0,a.QD)("code",null,"sudo -u huginn -H editor .env",-1),f={href:"https://github.com/huginn/huginn/blob/master/.env.example",target:"_blank",rel:"noopener noreferrer"},y=(0,a.QD)("code",null,"i",-1),q=(0,a.QD)("code",null,"esc",-1),D=(0,a.QD)("code",null,":wq",-1),_=(0,a.IL)('<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token assign-left variable">DATABASE_ADAPTER</span><span class="token operator">=</span>mysql2\n<span class="token comment">#DATABASE_ENCODING=utf8   # 修改点</span>\n<span class="token assign-left variable">DATABASE_RECONNECT</span><span class="token operator">=</span>true\n<span class="token assign-left variable">DATABASE_NAME</span><span class="token operator">=</span>huginn_production  <span class="token comment"># 修改点</span>\n<span class="token assign-left variable">DATABASE_POOL</span><span class="token operator">=</span><span class="token number">20</span>\n<span class="token assign-left variable">DATABASE_USERNAME</span><span class="token operator">=</span>huginn   <span class="token comment"># 修改点</span>\n<span class="token assign-left variable">DATABASE_PASSWORD</span><span class="token operator">=</span><span class="token string">&#39;$password&#39;</span> <span class="token comment"># 修改点，换为你自己的密码</span>\n<span class="token comment">#DATABASE_HOST=your-domain-here.com</span>\n<span class="token comment">#DATABASE_PORT=3306</span>\n<span class="token comment">#DATABASE_SOCKET=/tmp/mysql.sock</span>\n\n<span class="token comment"># MySQL only: If you are running a MySQL server &gt;=5.5.3, you should</span>\n<span class="token comment"># set DATABASE_ENCODING to utf8mb4 instead of utf8 so that the</span>\n<span class="token comment"># database can hold 4-byte UTF-8 characters like emoji.</span>\n<span class="token assign-left variable">DATABASE_ENCODING</span><span class="token operator">=</span>utf8mb4  <span class="token comment">#修改点</span>\n\n<span class="token punctuation">..</span>.\n<span class="token assign-left variable">RAILS_ENV</span><span class="token operator">=</span>production  <span class="token comment"># 修改点</span>\n\n<span class="token assign-left variable">USE_GRAPHVIZ_DOT</span><span class="token operator">=</span>dot <span class="token comment"># 取消注释，启用 GRAPHVIZ 来生成 diagram</span>\n\n<span class="token assign-left variable">TIMEZONE</span><span class="token operator">=</span><span class="token string">&quot;Beijing&quot;</span> <span class="token comment"># bundle exec rake time:zones:local，时区需按指定格式填写，否则会报错 runsv not running</span>\n\n<span class="token assign-left variable">DEFAULT_HTTP_USER_AGENT</span><span class="token operator">=</span><span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36&quot;</span> <span class="token comment"># 浏览器访问</span>\n\n<span class="token comment"># 邮件发送设置</span>\n<span class="token assign-left variable">SMTP_DOMAIN</span><span class="token operator">=</span>newzone.top\n<span class="token assign-left variable">SMTP_USER_NAME</span><span class="token operator">=</span>benson@newzone.top\n<span class="token assign-left variable">SMTP_PASSWORD</span><span class="token operator">=</span>somepassword\n<span class="token assign-left variable">SMTP_SERVER</span><span class="token operator">=</span>smtp.feishu.cn\n<span class="token assign-left variable">SMTP_PORT</span><span class="token operator">=</span><span class="token number">465</span>\n<span class="token assign-left variable">SMTP_AUTHENTICATION</span><span class="token operator">=</span>plain\n<span class="token assign-left variable">SMTP_ENABLE_STARTTLS_AUTO</span><span class="token operator">=</span>true\n<span class="token assign-left variable">SMTP_SSL</span><span class="token operator">=</span>true\n<span class="token assign-left variable">SEND_EMAIL_IN_DEVELOPMENT</span><span class="token operator">=</span>true\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Install Gems 前用子账户重新设置运行目录权限 <code>sudo chown -R huginn:huginn /home/huginn</code>，防止报错 <code>Your user account isn&#39;t allowed to install to the system RubyGems</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 注意看黄字警告</span>\ngem <span class="token function">install</span> bundler\n<span class="token comment"># Docker 环境中，时区容易丢失(6-70)</span>\n<span class="token function">apt-get</span> <span class="token function">install</span> tzdata\n<span class="token comment"># Install Gems</span>\n<span class="token function">sudo</span> <span class="token parameter variable">-u</span> huginn <span class="token parameter variable">-H</span> bundle config <span class="token builtin class-name">set</span> deployment <span class="token string">&#39;true&#39;</span>\n<span class="token function">sudo</span> <span class="token parameter variable">-u</span> huginn <span class="token parameter variable">-H</span> bundle config <span class="token builtin class-name">set</span> without <span class="token string">&#39;development test&#39;</span>\n<span class="token function">sudo</span> <span class="token parameter variable">-u</span> huginn <span class="token parameter variable">-H</span> bundle <span class="token function">install</span>\n<span class="token comment"># 备用 Gems 修复命令</span>\n<span class="token comment"># bundle update</span>\n<span class="token comment"># gem update bundler</span>\n<span class="token comment"># vim /home/huginn/huginn/Gemfile</span>\n\n<span class="token comment"># Initialize Database</span>\n<span class="token comment"># Create the database</span>\n<span class="token function">sudo</span> <span class="token parameter variable">-u</span> huginn <span class="token parameter variable">-H</span> bundle <span class="token builtin class-name">exec</span> rake db:create <span class="token assign-left variable">RAILS_ENV</span><span class="token operator">=</span>production\n\n<span class="token comment"># Migrate to the latest version</span>\n<span class="token function">sudo</span> <span class="token parameter variable">-u</span> huginn <span class="token parameter variable">-H</span> bundle <span class="token builtin class-name">exec</span> rake db:migrate <span class="token assign-left variable">RAILS_ENV</span><span class="token operator">=</span>production\n\n<span class="token comment"># ⚠️设置登陆账户密码，Create admin user and example agents using the default admin/password login</span>\n<span class="token function">sudo</span> <span class="token parameter variable">-u</span> huginn <span class="token parameter variable">-H</span> bundle <span class="token builtin class-name">exec</span> rake db:seed <span class="token assign-left variable">RAILS_ENV</span><span class="token operator">=</span>production <span class="token assign-left variable">SEED_USERNAME</span><span class="token operator">=</span>admin <span class="token assign-left variable">SEED_PASSWORD</span><span class="token operator">=</span>password\n\n<span class="token comment"># Compile Assets</span>\n<span class="token function">sudo</span> <span class="token parameter variable">-u</span> huginn <span class="token parameter variable">-H</span> bundle <span class="token builtin class-name">exec</span> rake assets:precompile <span class="token assign-left variable">RAILS_ENV</span><span class="token operator">=</span>production\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>sudo -u huginn -H editor Procfile</code> 修改 huginn 设置。如果需多现成运行，可移除 Multiple DelayedJob workers 部分的注释。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 在下两行前，添加符号「#」</span>\n<span class="token comment">#web: bundle exec rails server -p ${PORT-3000} -b ${IP-0.0.0.0}</span>\n<span class="token comment">#jobs: bundle exec rails runner bin/threaded.rb</span>\n\n<span class="token comment"># 删除以下下两行前的符号「#」</span>\nweb: bundle <span class="token builtin class-name">exec</span> unicorn <span class="token parameter variable">-c</span> config/unicorn.rb\njobs: bundle <span class="token builtin class-name">exec</span> rails runner bin/threaded.rb\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&#39;sv stop huginn-web-1&#39; exited with a non-zero return value: fail: huginn-web-1: runsv not running</code> 的报错，使用 <code>foreman export runit -a huginn -l /home/huginn/huginn/log /etc/service</code> 和 <code>chown -R huginn:huginn /etc/service/huginn*</code>。<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup> <sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup> 如果是重启 Huginn 时出现此报错，则检查 <code>sudo -u huginn -H editor .env</code> 设置。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 切换到</span>\n<span class="token builtin class-name">cd</span> /home/huginn/huginn\n<span class="token comment"># 设置</span>\n<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--add</span> safe.directory /home/huginn/huginn\n<span class="token comment"># 设置开机启动</span>\n<span class="token function">sudo</span> runsvdir /etc/service <span class="token operator">&amp;</span>\n<span class="token function">sudo</span> bundle <span class="token builtin class-name">exec</span> rake production:export\n\n<span class="token comment"># Setup Logrotate</span>\n<span class="token function">sudo</span> <span class="token function">cp</span> deployment/logrotate/huginn /etc/logrotate.d/huginn\n\n<span class="token comment"># Ensure Your Huginn Instance Is Running</span>\n<span class="token function">sudo</span> bundle <span class="token builtin class-name">exec</span> rake production:status\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Nginx 站点设置：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> nginx\n\n<span class="token comment"># Site Configuration</span>\n<span class="token function">sudo</span> <span class="token function">cp</span> deployment/nginx/huginn /etc/nginx/sites-available/huginn\n<span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> /etc/nginx/sites-available/huginn /etc/nginx/sites-enabled/huginn\n\n<span class="token comment"># Change YOUR_SERVER_FQDN to the fully-qualified domain name of your host serving Huginn.</span>\n<span class="token function">sudo</span> editor /etc/nginx/sites-available/huginn\n\n<span class="token comment"># 不需要 https，则改为下方配置</span>\nserver <span class="token punctuation">{</span>\n  listen <span class="token number">80</span><span class="token punctuation">;</span> <span class="token comment"># 监听的端⼝</span>\n  server_name localhost home.newzone.top<span class="token punctuation">;</span> <span class="token comment"># 域名或ip，这里启用了两个地址，用空格分开</span>\n\n<span class="token comment"># 测试设置是否正确</span>\n<span class="token function">sudo</span> nginx <span class="token parameter variable">-t</span>\n\n<span class="token comment"># 移除默认网站设置，只有当服务器/容器只存在 Huginn 网站方执行下行命令</span>\n<span class="token function">sudo</span> <span class="token function">rm</span> /etc/nginx/sites-enabled/default\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上完成了 Huginn 的所有部署，执行 <code>sudo service nginx restart</code> 即可访问网站。</p><h3 id="huginn-docker" tabindex="-1"><a class="header-anchor" href="#huginn-docker"><span>Huginn Docker</span></a></h3>',11),w={href:"https://github.com/huginn/huginn/tree/master/docker/multi-process",target:"_blank",rel:"noopener noreferrer"},A=(0,a.IL)('<p>此外，官方镜像路径与手动版不同，不支持 force_stop 命令。官方建议 Docker 中使用下方命令删除数据库中卡住的任务。这个命令实测是有效的，但我有次碰到了未知 bug，卡住的任务被删除，后续任务却没继续。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># get a shell inside the docker container (replace huginn with the name or id of the container)</span>\n<span class="token function">sudo</span> <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> huginn /bin/bash\n\n<span class="token comment"># source the environment file</span>\n<span class="token builtin class-name">source</span> .env\n\n<span class="token comment"># get a rails console</span>\nbundle <span class="token builtin class-name">exec</span> rails console\n\n<span class="token comment"># inside the rails console delete  the job</span>\nDelayed::Job.where<span class="token punctuation">(</span><span class="token string">&#39;locked_at IS NOT NULL AND locked_by IS NOT NULL AND failed_at IS NULL&#39;</span><span class="token punctuation">)</span>.destroy_all\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="agents" tabindex="-1"><a class="header-anchor" href="#agents"><span>Agents</span></a></h2><h3 id="trigger-agent" tabindex="-1"><a class="header-anchor" href="#trigger-agent"><span>Trigger Agent</span></a></h3><p>Trigger Agent 挑选符合条件的事件。</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token comment"># content 字段中不包含 周雅萌 或 邓雅萌</span>\n<span class="token punctuation">{</span>\n  <span class="token key atrule">&quot;expected_receive_period_in_days&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span>\n  <span class="token key atrule">&quot;keep_event&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span>\n  <span class="token key atrule">&quot;rules&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token key atrule">&quot;type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;!regex&quot;</span><span class="token punctuation">,</span>\n      <span class="token key atrule">&quot;value&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;周雅萌 | 邓雅萌&quot;</span><span class="token punctuation">,</span>\n      <span class="token key atrule">&quot;path&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;$.content&quot;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token key atrule">&quot;message&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Looks like your pattern matched in &#39;{{value}}&#39;!&quot;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment"># title 中包含品牌词 iluminage 或 易美肌</span>\n<span class="token punctuation">{</span>\n  <span class="token key atrule">&quot;expected_receive_period_in_days&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span>\n  <span class="token key atrule">&quot;keep_event&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span>\n  <span class="token key atrule">&quot;rules&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token key atrule">&quot;type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;regex&quot;</span><span class="token punctuation">,</span>\n      <span class="token key atrule">&quot;value&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;iluminage|易美肌&quot;</span><span class="token punctuation">,</span>\n      <span class="token key atrule">&quot;path&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;$.title&quot;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token key atrule">&quot;message&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Looks like your pattern matched in &#39;{{value}}&#39;!&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="liquid-output-agent" tabindex="-1"><a class="header-anchor" href="#liquid-output-agent"><span>Liquid Output Agent</span></a></h3><p>用自定义模板将数据整理，输出为 HTML，json 和 xml 格式链接。</p><p>模式一般选 <code>Last X events</code>，将接收到的所有数据对外输出，默认为 1000。</p><p><code>Last X events</code> 模式下，可以设置 <code>Event limit</code> 以控制输出数据的数量和时间段。<code>Event limit</code> 可以设为 100，即输出数据为 100；也可以设为「1 day」或「5 minutes」，即仅输出最近一天的内容。</p><h3 id="event-formatting-agent" tabindex="-1"><a class="header-anchor" href="#event-formatting-agent"><span>Event Formatting Agent</span></a></h3>',11),Q={href:"http://huginnio.herokuapp.com/scenarios/14/download",target:"_blank",rel:"noopener noreferrer"},x=(0,a.IL)('<div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token comment"># strftime() 方法中常用的占位符</span>\n<span class="token comment"># %Y 表示年份，%m 表示月份，%d 表示日期，%H 表示小时（24小时制），%M 表示分钟，%S 表示秒，%B 代表英文的月份，`%I` 代表小时（12小时制），`%p` 代表 AM/PM。`%e` 代表日期，不会在首位添加零。</span>\n<span class="token key atrule">&quot;created_at&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;{{created_at | date:&#39;%Y-%m-%d&#39;}}&quot;</span>\n\n<span class="token comment"># 将 2023-03-02 23:33:30 +0800 替换为 2023-03-02</span>\n<span class="token key atrule">&quot;created_at&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;{{created_at | regex_replace: &#39; &#39;, &#39;&#39;| regex_replace: &#39;(([0-1]?[0-9])|([2][0-3])):([0-5]?[0-9])(:([0-5]?[0-9]))?&#39;, &#39;&#39;| regex_replace: &#39;\\\\+0800&#39;, &#39;&#39;}}&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="正则重构" tabindex="-1"><a class="header-anchor" href="#正则重构"><span>正则重构</span></a></h4><p>比如生成时间规则为 <code>&quot;created_at&quot;: &quot;{{created_at}}&quot;</code>，默认时间 <code>2022-07-06 21:09:51 +0800</code>，使用正则删除规则为 <code>&quot;created_at&quot;: &quot;{{created_at | regex_replace: &#39; &#39;, &#39;&#39;| regex_replace: &#39;(([0-1]?[0-9])|([2][0-3])):([0-5]?[0-9])(:([0-5]?[0-9]))?&#39;, &#39;&#39;| regex_replace: &#39;\\\\+0800&#39;, &#39;&#39;}}&quot;</code>。</p><h4 id="加前后缀" tabindex="-1"><a class="header-anchor" href="#加前后缀"><span>加前后缀</span></a></h4><p>抓取链接不完整时，需要完善链接，比如 <code>&quot;url_link&quot;: &quot;https://so.toutiao.com{{temp_link}}&quot;</code>。</p><p>For example, here is a possible Event:</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token punctuation">{</span>\n  <span class="token key atrule">&quot;high&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token key atrule">&quot;celsius&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;18&quot;</span><span class="token punctuation">,</span> <span class="token key atrule">&quot;fahreinheit&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;64&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token key atrule">&quot;date&quot;</span><span class="token punctuation">:</span>\n    <span class="token punctuation">{</span> <span class="token key atrule">&quot;epoch&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;1357959600&quot;</span><span class="token punctuation">,</span> <span class="token key atrule">&quot;pretty&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;10:00 PM EST on January 11, 2013&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token key atrule">&quot;conditions&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Rain showers&quot;</span><span class="token punctuation">,</span>\n  <span class="token key atrule">&quot;data&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;This is some data&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You may want to send this event to another Agent, for example a Twilio Agent, which expects a <code>message</code> key. You can use an Event Formatting Agent&#39;s <code>instructions</code> setting to do this in the following way:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token property">&quot;instructions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Today&#39;s conditions look like {{conditions}} with a high temperature of {{high.celsius}} degrees Celsius.&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;subject&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{data}}&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;created_at&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{created_at}}&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Names here like <code>conditions</code>, <code>high</code> and <code>data</code> refer to the corresponding values in the Event hash.</p><p>The special key <code>created_at</code> refers to the timestamp of the Event, which can be reformatted by the <code>date</code> filter, like <code>{{created_at | date:&quot;at %I:%M %p&quot; }}</code>.</p><p>The upstream agent of each received event is accessible via the key <code>agent</code>, which has the following attributes: <code>name</code>, <code>options</code>, <code>sources</code>, <code>type</code>, <code>url</code>, <code>id</code>, <code>disabled</code>, <code>memory</code>, <code>controllers</code>, <code>schedule</code>, <code>keep_events_for</code>, <code>propagate_immediately</code>, <code>working</code>, <code>receivers</code>, <code>control_targets</code>.</p>',12),Y={href:"https://github.com/huginn/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},S=(0,a.IL)('<p>Events generated by this possible Event Formatting Agent will look like:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Today&#39;s conditions look like Rain showers with a high temperature of 18 degrees Celsius.&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;subject&quot;</span><span class="token operator">:</span> <span class="token string">&quot;This is some data&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In <code>matchers</code> setting you can perform regular expression matching against contents of events and expand the match data for use in <code>instructions</code> setting. Here is an example:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;matchers&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{date.pretty}}&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;regexp&quot;</span><span class="token operator">:</span> <span class="token string">&quot;A(?&lt;time&gt;dd:dd [AP]M [A-Z]+)&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;to&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pretty_date&quot;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This virtually merges the following hash into the original event hash:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token property">&quot;pretty_date&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token property">&quot;time&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10:00 PM EST&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;0&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10:00 PM EST on January 11, 2013&quot;</span>\n  <span class="token property">&quot;1&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10:00 PM EST&quot;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>So you can use it in <code>instructions</code> like this:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token property">&quot;instructions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Today&#39;s conditions look like {{conditions}} with a high temperature of {{high.celsius}} degrees Celsius according to the forecast at {{pretty_date.time}}.&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;subject&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{data}}&quot;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you want to retain original contents of events and only add new keys, then set <code>mode</code> to <code>merge</code>, otherwise set it to <code>clean</code>.</p><p>To CGI escape output (for example when creating a link), use the Liquid <code>uri_escape</code> filter, like so:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;A peak was on Twitter in {{group_by}}.  Search: https://twitter.com/search?q={{group_by | uri_escape}}&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="adioso-agent-机票价格追踪" tabindex="-1"><a class="header-anchor" href="#adioso-agent-机票价格追踪"><span>Adioso Agent - 机票价格追踪</span></a></h3><p><code>Creates events</code></p>',14),E=(0,a.QD)("code",null,"start_date",-1),T=(0,a.QD)("code",null,"end_date",-1),R={href:"http://adioso.com/",target:"_blank",rel:"noopener noreferrer"},L=(0,a.QD)("code",null,"username",-1),I=(0,a.QD)("code",null,"password",-1),C=(0,a.QD)("hr",null,null,-1),H=(0,a.QD)("h3",{id:"aftership-agent-物流追踪-api-付费",tabindex:"-1"},[(0,a.QD)("a",{class:"header-anchor",href:"#aftership-agent-物流追踪-api-付费"},[(0,a.QD)("span",null,"Aftership Agent - 物流追踪-API 付费")])],-1),P=(0,a.QD)("p",null,[(0,a.QD)("code",null,"Creates events")],-1),j=(0,a.QD)("p",null,[(0,a.mY)("Aftership agent 帮助你追踪你的快递，并实时更新包裹动态。为了能够使用 Aftership API，您需要生成一个 "),(0,a.QD)("code",null,"API Key"),(0,a.mY)("。这需要付费才能使用其跟踪功能。")],-1),N=(0,a.QD)("code",null,"path",-1),O=(0,a.QD)("code",null,"trackings",-1),K={href:"https://www.aftership.com/docs/api/4/trackings",target:"_blank",rel:"noopener noreferrer"},F=(0,a.QD)("code",null,"trackings/SLUG/TRACKING_NUMBER",-1),M=(0,a.QD)("code",null,"SLUG",-1),U=(0,a.QD)("code",null,"TRACKING_NUMBER",-1),B=(0,a.QD)("code",null,"last_checkpoint/SLUG/TRACKING_NUMBER",-1),z=(0,a.QD)("p",null,[(0,a.mY)("You can get a list of courier information here "),(0,a.QD)("code",null,"https://www.aftership.com/courier")],-1),G=(0,a.QD)("p",null,"Required Options:",-1),W=(0,a.QD)("ul",null,[(0,a.QD)("li",null,[(0,a.QD)("code",null,"api_key"),(0,a.mY)(" - YOUR_API_KEY.")]),(0,a.QD)("li",null,[(0,a.QD)("code",null,"path request and its full path")])],-1),V=(0,a.QD)("hr",null,null,-1),J=(0,a.QD)("h3",{id:"algorithmia-agent-ai-算法",tabindex:"-1"},[(0,a.QD)("a",{class:"header-anchor",href:"#algorithmia-agent-ai-算法"},[(0,a.QD)("span",null,"Algorithmia Agent - AI 算法")])],-1),X=(0,a.QD)("code",null,"Creates events",-1),$=(0,a.QD)("code",null,"Receives events",-1),Z=(0,a.QD)("code",null,"Dry runs",-1),ee={href:"http://huginnio.herokuapp.com/agent_gems#huginn_algorithmia_agent",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://algorithmia.com",target:"_blank",rel:"noopener noreferrer"},se=(0,a.IL)('<p>The created event will have the output from Algorithmia in the <code>result</code> key. To merge incoming Events with the result, use <code>merge</code> for the <code>mode</code> key.</p><hr><h3 id="attribute-difference-agent-属性差异-待深入理解" tabindex="-1"><a class="header-anchor" href="#attribute-difference-agent-属性差异-待深入理解"><span>Attribute Difference Agent - 属性差异（待深入理解）</span></a></h3><p><code>Creates events</code> <code>Receives events</code></p><p>The Attribute Difference Agent receives events and emits a new event with the difference or change of a specific attribute in comparison to the previous event received. Attribute Difference Agent 用于传递两个不同值的差异和改变。</p><p><code>path</code> specifies the JSON path of the attribute to be used from the event.</p><p><code>output</code> specifies the new attribute name that will be created on the original payload and it will contain the difference or change.</p><p><code>method</code> specifies if it should be…</p><ul><li><code>percentage_change</code> eg. Previous value was <code>160</code>, new value is <code>116</code>. Percentage change is <code>-27.5</code></li><li><code>decimal_difference</code> eg. Previous value was <code>5.5</code>, new value is <code>15.2</code>. Difference is <code>9.7</code></li><li><code>integer_difference</code> eg. Previous value was <code>50</code>, new value is <code>40</code>. Difference is <code>-10</code></li></ul><p><code>decimal_precision</code> defaults to <code>3</code>, but you can override this if you want.</p><p><code>expected_update_period_in_days</code> is used to determine if the Agent is working.</p><p>The resulting event will be a copy of the received event with the difference or change added as an extra attribute. If you use the <code>percentage_change</code> the attribute will be formatted as such <code>{{attribute}}_change</code>, otherwise it will be <code>{{attribute}}_diff</code>.</p><p>All configuration options will be liquid interpolated based on the incoming event.</p><hr><h3 id="basecamp-agent-service-停用" tabindex="-1"><a class="header-anchor" href="#basecamp-agent-service-停用"><span><s>Basecamp Agent - Service 停用</s></span></a></h3><p><code>Creates events</code> <code>37signals</code></p><p>The Basecamp Agent checks a Basecamp project for new Events</p>',17),ae={href:"http://huginnio.herokuapp.com/services",target:"_blank",rel:"noopener noreferrer"},te=(0,a.QD)("hr",null,null,-1),oe=(0,a.QD)("h3",{id:"bigquery-agent-大型数据库分析",tabindex:"-1"},[(0,a.QD)("a",{class:"header-anchor",href:"#bigquery-agent-大型数据库分析"},[(0,a.QD)("span",null,"Bigquery Agent - 大型数据库分析")])],-1),ie=(0,a.QD)("code",null,"Creates events",-1),le=(0,a.QD)("code",null,"Receives events",-1),ce=(0,a.QD)("code",null,"Dry runs",-1),re={href:"http://huginnio.herokuapp.com/agent_gems#huginn_bigquery_agent",target:"_blank",rel:"noopener noreferrer"},pe=(0,a.QD)("p",null,"Bigquery Agent 会调用 Google BigQuery 和 Goolge Cloud 账户，可能需要付费。同时，Bigquery Agent 依靠服务帐户进行身份验证，而不是 oauth。",-1),de=(0,a.QD)("p",null,"Setup:",-1),ue={href:"https://code.google.com/apis/console/b/0/",target:"_blank",rel:"noopener noreferrer"},me=(0,a.QD)("li",null,"Use your existing project (or create a new one)",-1),ge=(0,a.QD)("li",null,"APIs & Auth -> Enable BigQuery",-1),he=(0,a.QD)("li",null,"Credentials -> Create new Client ID -> Service Account",-1),ve=(0,a.QD)("li",null,[(0,a.mY)("Download the JSON keyfile and either save it to a path, ie: "),(0,a.QD)("code",null,"/home/huginn/Huginn-5d12345678cd.json"),(0,a.mY)(", or copy the value of "),(0,a.QD)("code",null,"private_key"),(0,a.mY)(" from the file.")],-1),be=(0,a.QD)("li",null,"Grant that service account access to the BigQuery datasets and tables you want to query.",-1),ke=(0,a.IL)('<p>The JSON keyfile you downloaded earlier should look like this:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;service_account&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;project_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;huginn-123123&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;private_key_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;6d6b476fc6ccdb31e0f171991e5528bb396ffbe4&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;private_key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;-----BEGIN PRIVATE KEY-----\\n...\\n-----END PRIVATE KEY-----\\n&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;client_email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;huginn@huginn-123123.iam.gserviceaccount.com&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;client_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;123123...123123&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;auth_uri&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://accounts.google.com/o/oauth2/auth&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;token_uri&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://accounts.google.com/o/oauth2/token&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;auth_provider_x509_cert_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://www.googleapis.com/oauth2/v1/certs&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;client_x509_cert_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://www.googleapis.com/robot/v1/metadata/x509/huginn%40huginn-123123.iam.gserviceaccount.com&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Agent Configuration:</p><p><code>project_id</code> - The id of the Google Cloud project.</p>',4),fe=(0,a.QD)("code",null,"query",-1),ye={href:"https://github.com/cantino/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},qe=(0,a.QD)("p",null,[(0,a.QD)("code",null,"use_legacy"),(0,a.mY)(" - Whether or not to use BigQuery legacy SQL or standard SQL. (Defaults to "),(0,a.QD)("code",null,"false"),(0,a.mY)(")")],-1),De=(0,a.QD)("code",null,"max",-1),_e={href:"https://googlecloudplatform.github.io/google-cloud-ruby/#/docs/google-cloud-bigquery/v0.27.0/google/cloud/bigquery/project",target:"_blank",rel:"noopener noreferrer"},we=(0,a.IL)("<p><code>timeout</code> - How long to wait for query to complete (in ms). Defaults to <code>10000</code>.</p><p><code>event_per_row</code> - Whether to create one Event per row returned, or one event with all rows as <code>results</code>. Defaults to <code>false</code>.</p><p><strong>Authorization</strong></p><p><code>keyfile</code> - (String) The path (relative to where Huginn is running) to the JSON keyfile downloaded in step 5 above.</p><p>Alternately, <code>keyfile</code> can be a hash:</p>",5),Ae=(0,a.QD)("code",null,"keyfile",-1),Qe=(0,a.QD)("code",null,"private_key",-1),xe=(0,a.QD)("code",null,"private_key",-1),Ye={href:"https://github.com/cantino/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},Se=(0,a.QD)("code",null,"{% credential google-bigquery-key %}",-1),Ee=(0,a.IL)('<p><code>keyfile</code> <code>client_email</code> - The value of <code>client_email</code> from the downloaded file. Same as the service account email.</p><hr><h3 id="boxcar-agent-iphone-通知栏-app" tabindex="-1"><a class="header-anchor" href="#boxcar-agent-iphone-通知栏-app"><span><s>Boxcar Agent - iPhone 通知栏 app</s></span></a></h3><p><code>Receives events</code></p><p>Boxcar agent 会在 iPhone 推送通知，但其不兼容于 iOS 10 系统，已经停止更新。</p><p>To be able to use the Boxcar end-user API, you need your <code>Access Token</code>. The access token is available on general “Settings” screen of Boxcar iOS app or from Boxcar Web Inbox settings page.</p><p>Please provide your access token in the <code>user_credentials</code> option. If you&#39;d like to use a credential, set the <code>user_credentials</code> option to <code>{% credential CREDENTIAL_NAME %}</code>.</p><p>Options:</p><ul><li><code>user_credentials</code> - Boxcar access token.</li><li><code>title</code> - Title of the message.</li><li><code>body</code> - Body of the message.</li><li><code>source_name</code> - Name of the source of the message. Set to <code>Huginn</code> by default.</li><li><code>icon_url</code> - URL to the icon.</li><li><code>sound</code> - Sound to be played for the notification. Set to ‘bird-1’ by default.</li></ul><hr><h3 id="change-detector-agent-监测数据变化" tabindex="-1"><a class="header-anchor" href="#change-detector-agent-监测数据变化"><span>Change Detector Agent - 监测数据变化</span></a></h3><p><code>Creates events</code> <code>Receives events</code></p><p>The Change Detector Agent receives a stream of events and emits a new event when a property of the received event changes. Change Detector Agent 会接收数据流内容，并在监测到数据属性改变后，传递出新事件。</p>',13),Te=(0,a.QD)("code",null,"property",-1),Re={href:"https://github.com/huginn/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},Le=(0,a.QD)("code",null,"last_property",-1),Ie=(0,a.QD)("code",null,"{% assign drop = last_property | minus: price %}{% if last_property == blank or drop > 0 %}{{ price | default: last_property }}{% else %}{{ last_property }}{% endif %}",-1),Ce=(0,a.IL)('<p><code>expected_update_period_in_days</code> is used to determine if the Agent is working.</p><p>The resulting event will be a copy of the received event.</p><hr><h3 id="commander-agent-触发命令" tabindex="-1"><a class="header-anchor" href="#commander-agent-触发命令"><span>Commander Agent - 触发命令</span></a></h3><p><code>Receives events</code> <code>Controls agents</code></p><p>Commander Agent 由时间表或传入事件触发，并触发其他 agents 运行，禁用，配置或启用自己。</p><p><strong>Action types</strong></p><p>Set <code>action</code> to one of the action types below:</p><ul><li><p><code>run</code>: Target Agents are run when this agent is triggered.</p></li><li><p><code>disable</code>: Target Agents are disabled (if not) when this agent is triggered.</p></li><li><p><code>enable</code>: Target Agents are enabled (if not) when this agent is triggered.</p></li><li><p><code>configure</code>: Target Agents have their options updated with the contents of <code>configure_options</code>.</p></li></ul>',9),He={href:"https://github.com/huginn/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},Pe=(0,a.IL)('<ul><li><p>To create a CommanderAgent that receives an event from a WeatherAgent every morning to kick an agent flow that is only useful in a nice weather, try this: <code>{% if conditions contains &#39;Sunny&#39; or conditions contains &#39;Cloudy&#39; %}</code> <code>run{% endif %}</code></p></li><li><p>Likewise, if you have a scheduled agent flow specially crafted for rainy days, try this: <code>{% if conditions contains &#39;Rain&#39; %}enable{% else %}disabled{% endif %}</code></p></li><li><p>If you want to update a WeatherAgent based on a UserLocationAgent, you could use <code>&#39;action&#39;: &#39;configure&#39;</code> and set &#39;configure*options&#39; to <code>{ &#39;location&#39;: &#39;{{\\_location*.latlng}}&#39; }</code>.</p></li><li><p>In templating, you can use the variable <code>target</code> to refer to each target agent, which has the following attributes: <code>name</code>, <code>options</code>, <code>sources</code>, <code>type</code>, <code>url</code>, <code>id</code>, <code>disabled</code>, <code>memory</code>, <code>controllers</code>, <code>schedule</code>, <code>keep_events_for</code>, <code>propagate_immediately</code>, <code>working</code>, <code>receivers</code>, and <code>control_targets</code>.</p></li></ul><p><strong>Targets</strong></p><p>Select Agents that you want to control from this CommanderAgent.</p><hr><h3 id="csv-agent-csv-表格数据处理" tabindex="-1"><a class="header-anchor" href="#csv-agent-csv-表格数据处理"><span>Csv Agent - CSV 表格数据处理</span></a></h3><p><code>Creates events</code> <code>Receives events</code> <code>Consumes file pointer</code></p><p>CsvAgent 可以解析或重构 CSV 表格数据。解析时，可以针对整个 CSV，也可以单独处理一行数据。</p><p>Set <code>mode</code> to <code>parse</code> to parse CSV from incoming event, when set to <code>serialize</code> the agent serilizes the data of events to CSV.</p><p><strong>Universal options</strong></p><p>Specify the <code>separator</code> which is used to seperate the fields from each other (default is <code>,</code>).</p><p><code>data_key</code> sets the key which contains the serialized CSV or parsed CSV data in emitted events.</p><p><strong>Parsing</strong></p><p>If <code>use_fields</code> is set to a comma seperated string and the CSV file contains field headers the agent will only extract the specified fields.</p><p><code>output</code> determines wheather one event per row is emitted or one event that includes all the rows.</p><p>Set <code>with_header</code> to <code>true</code> if first line of the CSV file are field names.</p>',15),je=(0,a.QD)("code",null,"FtpsiteAgent",-1),Ne=(0,a.QD)("code",null,"LocalFileAgent",-1),Oe=(0,a.QD)("code",null,"S3Agent",-1),Ke={href:"https://github.com/huginn/huginn/wiki/How-Huginn-works-with-files",target:"_blank",rel:"noopener noreferrer"},Fe={href:"http://goessner.net/articles/JsonPath/",target:"_blank",rel:"noopener noreferrer"},Me=(0,a.QD)("code",null,"data_path",-1),Ue=(0,a.QD)("code",null,"data_path",-1),Be=(0,a.QD)("p",null,[(0,a.QD)("strong",null,"Serializing")],-1),ze=(0,a.QD)("p",null,[(0,a.mY)("If "),(0,a.QD)("code",null,"use_fields"),(0,a.mY)(" is set to a comma seperated string and the first received event has a object at the specified "),(0,a.QD)("code",null,"data_path"),(0,a.mY)(" the generated CSV will only include the given fields.")],-1),Ge=(0,a.QD)("p",null,[(0,a.mY)("Set "),(0,a.QD)("code",null,"with_header"),(0,a.mY)(" to "),(0,a.QD)("code",null,"true"),(0,a.mY)(" to include a field header in the CSV.")],-1),We={href:"http://goessner.net/articles/JsonPath/",target:"_blank",rel:"noopener noreferrer"},Ve=(0,a.QD)("code",null,"data_path",-1),Je=(0,a.IL)('<hr><h3 id="data-output-agent-网页输出数据-rss" tabindex="-1"><a class="header-anchor" href="#data-output-agent-网页输出数据-rss"><span>Data Output Agent - 网页输出数据（RSS）</span></a></h3><p><code>Receives events</code></p><p>Data Output Agent 将传入的数据输入为 RSS 或 JSON，具体格式为“.xml”或“.json”。</p><p>This Agent will output data at:</p><p><code>https:///users/1/web_requests/:id/:secret.xml</code></p><p>where <code>:secret</code> is one of the allowed secrets specified in your options and the extension can be <code>xml</code> or <code>json</code>.</p><p>You can setup multiple secrets so that you can individually authorize external systems to access your Huginn data.</p><p>Options:</p>',9),Xe=(0,a.QD)("li",null,[(0,a.QD)("code",null,"secrets"),(0,a.mY)(" - An array of tokens that the requestor must provide for light-weight authentication.")],-1),$e=(0,a.QD)("li",null,[(0,a.QD)("code",null,"expected_receive_period_in_days"),(0,a.mY)(" - How often you expect data to be received by this Agent from other Agents.")],-1),Ze=(0,a.QD)("code",null,"template",-1),en={href:"https://github.com/huginn/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},nn=(0,a.QD)("code",null,"link",-1),sn=(0,a.QD)("code",null,"title",-1),an=(0,a.QD)("code",null,"description",-1),tn=(0,a.QD)("code",null,"icon",-1),on=(0,a.QD)("code",null,"<channel>",-1),ln=(0,a.QD)("code",null,"self",-1),cn=(0,a.QD)("code",null,"item",-1),rn=(0,a.QD)("code",null,"pubDate",-1),pn=(0,a.QD)("li",null,[(0,a.QD)("code",null,"events_to_show"),(0,a.mY)(" - The number of events to output in RSS or JSON. (default: "),(0,a.QD)("code",null,"40"),(0,a.mY)(")")],-1),dn=(0,a.QD)("li",null,[(0,a.QD)("code",null,"ttl"),(0,a.mY)(" - A value for the "),(0,a.QD)("code",null,"<ttl>"),(0,a.mY)(" element in RSS output. (default: "),(0,a.QD)("code",null,"60"),(0,a.mY)(")")],-1),un=(0,a.QD)("code",null,"ns_media",-1),mn={href:"https://en.wikipedia.org/wiki/Media_RSS",target:"_blank",rel:"noopener noreferrer"},gn=(0,a.QD)("code",null,"ns_itunes",-1),hn={href:"http://lists.apple.com/archives/syndication-dev/2005/Nov/msg00002.html",target:"_blank",rel:"noopener noreferrer"},vn=(0,a.QD)("li",null,[(0,a.QD)("code",null,"rss_content_type"),(0,a.mY)(" - Content-Type for RSS output (default: "),(0,a.QD)("code",null,"application/rss+xml"),(0,a.mY)(")")],-1),bn=(0,a.QD)("li",null,[(0,a.QD)("code",null,"response_headers"),(0,a.mY)(" - An object with any custom response headers. (example: "),(0,a.QD)("code",null,'{"Access-Control-Allow-Origin": "*"}'),(0,a.mY)(")")],-1),kn=(0,a.QD)("code",null,"push_hubs",-1),fn={href:"https://pubsubhubbub.superfeedr.com/",target:"_blank",rel:"noopener noreferrer"},yn={href:"https://pubsubhubbub.appspot.com/",target:"_blank",rel:"noopener noreferrer"},qn=(0,a.QD)("code",null,"template.self",-1),Dn=(0,a.IL)('<p>If you&#39;d like to output RSS tags with attributes, such as <code>enclosure</code>, use something like the following in your <code>template</code>:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token property">&quot;enclosure&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token property">&quot;_attributes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{media_url}}&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;length&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1234456789&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;audio/mpeg&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token property">&quot;another_tag&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token property">&quot;_attributes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;another_key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;another_value&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;_contents&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tag contents (can be an object for nesting)&quot;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Ordering events</strong></p><p>To specify the order of events, set <code>events_order</code> to an array of sort keys, each of which looks like either <code>expression</code> or <code>[expression, type, descending]</code>, as described as follows:</p><ul><li><p><em>expression</em> is a Liquid template to generate a string to be used as sort key.</p></li><li><p><em>type</em> (optional) is one of <code>string</code> (default), <code>number</code> and <code>time</code>, which specifies how to evaluate <em>expression</em> for comparison.</p></li><li><p><em>descending</em> (optional) is a boolean value to determine if comparison should be done in descending (reverse) order, which defaults to <code>false</code>.</p></li></ul><p>Sort keys listed earlier take precedence over ones listed later. For example, if you want to sort articles by the date and then by the author, specify <code>[[&quot;{{date}}&quot;, &quot;time&quot;], &quot;{{author}}&quot;]</code>.</p><p>Sorting is done stably, so even if all events have the same set of sort key values the original order is retained. Also, a special Liquid variable <code>_index_</code> is provided, which contains the zero-based index number of each event, which means you can exactly reverse the order of events by specifying <code>[[&quot;{{_index_}}&quot;, &quot;number&quot;, true]]</code>.</p><p>DataOutputAgent will select the last <code>events_to_show</code> entries of its received events sorted in the order specified by <code>events_order</code>, which is defaulted to the event creation time. So, if you have multiple source agents that may create many events in a run, you may want to either increase <code>events_to_show</code> to have a larger &quot;window&quot;, or specify the <code>events_order</code> option to an appropriate value (like <code>date_published</code>) so events from various sources are properly mixed in the resulted feed.</p><p>There is also an option <code>events_list_order</code> that only controls the order of events listed in the final output, without attempting to maintain a total order of received events. It has the same format as <code>events_order</code> and is defaulted to <code>[[&quot;{{_index_}}&quot;,&quot;number&quot;,true]]</code> so the selected events are listed in reverse order like most popular RSS feeds list their articles.</p><p><strong>Liquid Templating</strong></p>',10),_n={href:"https://github.com/huginn/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},wn=(0,a.IL)('<ul><li><code>events</code>: An array of events being output, sorted in the given order, up to <code>events_to_show</code> in number. For example, if source events contain a site title in the <code>site_title</code> key, you can refer to it in <code>template.title</code> by putting <code>{{events.first.site_title}}</code>.</li></ul><hr><h3 id="de-duplication-agent-数据去重" tabindex="-1"><a class="header-anchor" href="#de-duplication-agent-数据去重"><span>De Duplication Agent - 数据去重</span></a></h3><p><code>Creates events</code> <code>Receives events</code></p><p>De-duplication Agent 在接受数据后，会自动比对并去除重复数据。</p><p><code>property</code> the value that should be used to determine the uniqueness of the event (empty to use the whole payload)</p><p><code>lookback</code> amount of past Events to compare the value to (0 for unlimited)</p><p><code>expected_update_period_in_days</code> is used to determine if the Agent is working.</p><hr><h3 id="delay-agent-缓冲存储区" tabindex="-1"><a class="header-anchor" href="#delay-agent-缓冲存储区"><span>Delay Agent - 缓冲存储区</span></a></h3><p><code>Creates events</code> <code>Receives events</code></p><p>Delay Agent 存储收到的事件，并按计划发送它们的副本。将其用作事件的缓冲区或队列。</p><p><code>max_events</code> should be set to the maximum number of events that you&#39;d like to hold in the buffer. When this number is reached, new events will either be ignored, or will displace the oldest event already in the buffer, depending on whether you set <code>keep</code> to <code>newest</code> or <code>oldest</code>.</p><p><code>expected_receive_period_in_days</code> is used to determine if the Agent is working. Set it to the maximum number of days that you anticipate passing without this Agent receiving an incoming Event.</p><p><code>max_emitted_events</code> is used to limit the number of the maximum events which should be created. If you omit this DelayAgent will create events for every event stored in the memory.</p><hr><h3 id="digest-agent-摘要汇总-未理解" tabindex="-1"><a class="header-anchor" href="#digest-agent-摘要汇总-未理解"><span>Digest Agent - 摘要汇总 - 未理解</span></a></h3><p><code>Creates events</code> <code>Receives events</code></p><p>Digest Agent 收集发送给它的任何事件并将其作为单个事件发出。</p>',19),An=(0,a.QD)("code",null,"message",-1),Qn=(0,a.QD)("code",null,"message",-1),xn={href:"https://github.com/huginn/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},Yn=(0,a.IL)('<p>Set <code>expected_receive_period_in_days</code> to the maximum amount of time that you&#39;d expect to pass between Events being received by this Agent.</p><p>If <code>retained_events</code> is set to 0 (the default), all received events are cleared after a digest is sent. Set <code>retained_events</code> to a value larger than 0 to keep a certain number of events around on a rolling basis to re-send in future digests.</p><p>For instance, say <code>retained_events</code> is set to 3 and the Agent has received Events <code>5</code>, <code>4</code>, and <code>3</code>. When a digest is sent, Events <code>5</code>, <code>4</code>, and <code>3</code> are retained for a future digest. After Event <code>6</code> is received, the next digest will contain Events <code>6</code>, <code>5</code>, and <code>4</code>.</p><hr><h3 id="dkt-clustering-agent-数据挖掘算法" tabindex="-1"><a class="header-anchor" href="#dkt-clustering-agent-数据挖掘算法"><span>Dkt Clustering Agent - 数据挖掘算法？</span></a></h3>',5),Sn=(0,a.QD)("code",null,"Creates events",-1),En=(0,a.QD)("code",null,"Receives events",-1),Tn=(0,a.QD)("code",null,"Consumes file pointer",-1),Rn=(0,a.QD)("code",null,"Dry runs",-1),Ln={href:"http://huginnio.herokuapp.com/agent_gems#huginn_dkt_curation_agents",target:"_blank",rel:"noopener noreferrer"},In=(0,a.QD)("p",null,[(0,a.mY)("The "),(0,a.QD)("code",null,"DktClusteringAgent"),(0,a.mY)(" clusters the input document collection. The document collection first has to be converted to a set of vectors. DktClusteringAgent 会对输入文档集合进行聚类，文档集合首先必须被转换成一组向量。输入文档需要为特定格式，DktClusteringAgent 会在这个输入数据中查找集群。输入会包含查找到的集群数量和找到的集群特定值的信息。")],-1),Cn=(0,a.QD)("p",null,"The Agent expects the input in this particular format and then proceeds to find clusters in this input data. The output contains information on the number of clusters found and specific values for the found clusters.",-1),Hn=(0,a.QD)("code",null,"/e-clustering/generateClusters",-1),Pn={href:"https://github.com/dkt-projekt/e-Clustering#e-clustering-1",target:"_blank",rel:"noopener noreferrer"},jn={href:"https://github.com/cantino/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},Nn=(0,a.QD)("p",null,[(0,a.QD)("code",null,"url"),(0,a.mY)(" allows to customize the endpoint of the API when hosting the DKT services elswhere.")],-1),On=(0,a.QD)("code",null,"body",-1),Kn={href:"https://github.com/cantino/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},Fn={href:"http://www.cs.waikato.ac.nz/ml/weka/arff.html",target:"_blank",rel:"noopener noreferrer"},Mn=(0,a.IL)("<p><code>language</code> language of the source data</p><p><code>algorithm</code>: the algorithm to be used during clustering. Currently EM and Kmeans are supported.</p><p><code>merge</code> set to <code>true</code> to retain the received payload and update it with the extracted result</p><p><code>result_key</code> when present the emitted Event data will be nested inside the specified key</p><p><strong>When receiving a file pointer:</strong></p><p><code>body</code> will be ignored and the contents of the received file will be send instead.</p>",6),Un=(0,a.QD)("code",null,"FtpsiteAgent",-1),Bn=(0,a.QD)("code",null,"LocalFileAgent",-1),zn=(0,a.QD)("code",null,"S3Agent",-1),Gn={href:"https://github.com/huginn/huginn/wiki/How-Huginn-works-with-files",target:"_blank",rel:"noopener noreferrer"},Wn=(0,a.QD)("hr",null,null,-1),Vn=(0,a.QD)("h3",{id:"dropbox-file-url",tabindex:"-1"},[(0,a.QD)("a",{class:"header-anchor",href:"#dropbox-file-url"},[(0,a.QD)("span",null,"Dropbox File Url")])],-1),Jn=(0,a.QD)("p",null,[(0,a.QD)("code",null,"Agent Creates"),(0,a.mY)(),(0,a.QD)("code",null,"events Receives events"),(0,a.mY)(),(0,a.QD)("code",null,"Dry runs"),(0,a.mY)(),(0,a.QD)("code",null,"Dropbox oauth2")],-1),Xn={href:"https://www.dropbox.com/developers/core/docs#media",target:"_blank",rel:"noopener noreferrer"},$n={href:"https://www.dropbox.com/developers/core/docs#shares",target:"_blank",rel:"noopener noreferrer"},Zn=(0,a.IL)('<p>Include the <code>dropbox-api</code> and <code>omniauth-dropbox</code> gems in your <code>Gemfile</code> and set <code>DROPBOX_OAUTH_KEY</code> and <code>DROPBOX_OAUTH_SECRET</code> in your environment to use Dropbox Agents.</p><p>The incoming event payload needs to have a <code>paths</code> key, with a comma-separated list of files you want the URL for. For example:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token string">&quot;first/path, second/path&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>TIP</strong>: You can use the <em>Event Formatting Agent</em> to format events before they come in. Here’s an example configuration for formatting an event coming out of a <em>Dropbox Watch Agent</em>:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;instructions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{ added | map: &#39;path&#39; | join: &#39;,&#39; }}&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;matchers&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;mode&quot;</span><span class="token operator">:</span> <span class="token string">&quot;clean&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>An example of usage would be to watch a specific Dropbox directory (with the <em>DropboxWatchAgent</em>) and get the URLs for the added or updated files. You could then, for example, send emails with those links.</p><p>Set <code>link_type</code> to <code>&#39;temporary&#39;</code> if you want temporary links, or to <code>&#39;permanent&#39;</code> for permanent ones.</p><hr><h3 id="dropbox-watch-agent" tabindex="-1"><a class="header-anchor" href="#dropbox-watch-agent"><span>Dropbox Watch Agent</span></a></h3><p><code>Creates events</code> <code>Dropbox oauth2</code></p><p>Dropbox Watch Agent 监测给定值<code>dir_to_watch</code>并发出检测到的更改的事件。</p><p>Include the <code>dropbox-api</code> and <code>omniauth-dropbox</code> gems in your <code>Gemfile</code> and set <code>DROPBOX_OAUTH_KEY</code> and <code>DROPBOX_OAUTH_SECRET</code> in your environment to use Dropbox Agents.</p><hr><h3 id="email-agent" tabindex="-1"><a class="header-anchor" href="#email-agent"><span>Email Agent</span></a></h3><p>Email Agent 将刚收到的信息 <code>Receives events</code>，以邮件形式发送通知。</p>',15),es=(0,a.QD)("code",null,"subject",-1),ns={href:"https://github.com/huginn/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},ss=(0,a.QD)("code",null,'"Huginn email"',-1),as=(0,a.QD)("code",null,"{{subject}}",-1),ts=(0,a.QD)("code",null,"subject",-1),os=(0,a.IL)('<p>默认情况下，邮件正文将包含一个可选的 &quot;标题&quot;，然后是事件的键的列表。</p><p>你可以通过加入可选的<code>body</code>参数来定制邮件正文。像<code>subject</code>一样，<code>body</code>可以是一个简单的信息或一个液体模板。你可以只发送事件的<code>some_text</code>字段，<code>body</code>设置为<code>{{ some_text }}</code>。身体可以包含简单的 HTML，并将被净化。注意，当使用<code>body</code>时，它将被<code>&lt;html&gt;</code>和<code>&lt;body&gt;</code>标签包裹，所以你不需要自己添加这些。</p><p>你可以为邮件指定一个或多个 &quot;收件人&quot;，或者跳过这个选项，以便将邮件发送到你的账户的默认邮件地址。</p><p>你可以为邮件提供一个<code>from</code>地址，或者留空，默认为<code>EMAIL_FROM_ADDRESS</code> (``) 的值。</p><p>你可以为邮件提供一个<code>content_type</code>，并指定发送<code>text/plain</code>或<code>text/html</code>。如果你不指定<code>content_type</code>，那么收件人的邮件服务器将决定正确的渲染方式。</p><p>设置<code>expected_receive_period_in_days</code>为您希望该代理收到事件之间的最大时间。</p><hr><h3 id="email-digest-agent-邮件摘要" tabindex="-1"><a class="header-anchor" href="#email-digest-agent-邮件摘要"><span>Email Digest Agent - 邮件摘要</span></a></h3><p><code>Receives events</code></p><p>Email Digest Agent 收集发送给它的任何事件，并按计划通过电子邮件发送。使用事件的数目与 <code>Keep events</code> 有关，这意味着如果事件在 Email Digest Agent 计划运行之前到期，它们将不会出现在电子邮件中。</p><p>By default, the will have a <code>subject</code> and an optional <code>headline</code> before listing the Events. If the Events&#39; payloads contain a <code>message</code>, that will be highlighted, otherwise everything in their payloads will be shown.</p><p>You can specify one or more <code>recipients</code> for the email, or skip the option in order to send the email to your account&#39;s default email address.</p><p>You can provide a <code>from</code> address for the email, or leave it blank to default to the value of <code>EMAIL_FROM_ADDRESS</code> (``).</p><p>You can provide a <code>content_type</code> for the email and specify <code>text/plain</code> or <code>text/html</code> to be sent. If you do not specify <code>content_type</code>, then the recipient email server will determine the correct rendering.</p><p>Set <code>expected_receive_period_in_days</code> to the maximum amount of time that you&#39;d expect to pass between Events being received by this Agent.</p><hr><h3 id="evernote-agent" tabindex="-1"><a class="header-anchor" href="#evernote-agent"><span>Evernote Agent</span></a></h3><p><code>Creates events</code> <code>Receives events</code> <code>Evernote</code></p><p>Evernote Agent 与你的 Evernote 账户相连，新建笔记。</p>',19),is={href:"https://dev.evernote.com/doc/",target:"_blank",rel:"noopener noreferrer"},ls={href:"https://sandbox.evernote.com/Registration.action",target:"_blank",rel:"noopener noreferrer"},cs={href:"http://huginnio.herokuapp.com/services",target:"_blank",rel:"noopener noreferrer"},rs=(0,a.IL)('<p>Options:</p><ul><li><p><code>mode</code> - Two possible values:</p><ul><li><p><code>update</code> Based on events it receives, the agent will create notes or update notes with the same <code>title</code> and <code>notebook</code></p></li><li><p><code>read</code> On a schedule, it will generate events containing data for newly added or updated notes</p></li></ul></li><li><p><code>include_xhtml_content</code> - Set to <code>true</code> to include the content in ENML (Evernote Markup Language) of the note</p></li><li><p><code>note</code></p><ul><li><p>When <code>mode</code> is <code>update</code> the parameters of <code>note</code> are the attributes of the note to be added/edited. To edit a note, both <code>title</code> and <code>notebook</code> must be set.</p><p>For example, to add the tags &#39;comic&#39; and &#39;CS&#39; to a note titled &#39;xkcd Survey&#39; in the notebook &#39;xkcd&#39;, use:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token property">&quot;notes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xkcd Survey&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;notebook&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xkcd&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;tagNames&quot;</span><span class="token operator">:</span> <span class="token string">&quot;comic, CS&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If a note with the above title and notebook did note exist already, one would be created.</p></li><li><p>When <code>mode</code> is <code>read</code> the values are search parameters. Note: The <code>content</code> parameter is not used for searching. Setting <code>title</code> only filters notes whose titles contain <code>title</code> as a substring, not as the exact title.</p><p>For example, to find all notes with tag &#39;CS&#39; in the notebook &#39;xkcd&#39;, use:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token property">&quot;notes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;notebook&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xkcd&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;tagNames&quot;</span><span class="token operator">:</span> <span class="token string">&quot;CS&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><hr><h3 id="freme-explore-agent-sparql-数据断点" tabindex="-1"><a class="header-anchor" href="#freme-explore-agent-sparql-数据断点"><span>Freme Explore Agent - SPARQL-数据断点？</span></a></h3>',4),ps=(0,a.QD)("code",null,"Creates events",-1),ds=(0,a.QD)("code",null,"Receives events",-1),us=(0,a.QD)("code",null,"Dry runs",-1),ms={href:"http://huginnio.herokuapp.com/agent_gems#huginn_freme_enrichment_agents",target:"_blank",rel:"noopener noreferrer"},gs=(0,a.QD)("p",null,[(0,a.mY)("The "),(0,a.QD)("code",null,"FremeExploreAgent"),(0,a.mY)(" can retrieve description of a resource from a given endpoint. The endpoint can be SPARQL or Linked Data Fragments endpoint. FremeExploreAgent 可以检索给定端点的资源描述。端点可以是 SPARQL 或 Linked Data Fragments 端点。")],-1),hs=(0,a.QD)("code",null,"/e-link/explore",-1),vs={href:"http://api.freme-project.eu/doc/current/api-doc/full.html#!/e-Link/explore",target:"_blank",rel:"noopener noreferrer"},bs={href:"https://github.com/cantino/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},ks=(0,a.IL)("<p><code>base_url</code> allows to customize the API server when hosting the FREME services elswhere.</p><p><code>auth_token</code> can be set to access private filters, datasets, templates or pipelines (depending on the agent).</p><p><code>outformat</code> requested RDF serialization format of the output (required), CSV is only supported when using a filter.</p><p><code>resource</code> a URI of the resource which should be described (required).</p><p><code>endpoint</code> a URL of the endpoint which should be used to retrieve info about the resource.</p><p><code>endpoint_type</code> the type of the endpoint (required).</p>",6),fs=(0,a.QD)("code",null,"filter",-1),ys={href:"http://api.freme-project.eu/doc/current/knowledge-base/freme-for-api-users/filtering.html",target:"_blank",rel:"noopener noreferrer"},qs=(0,a.IL)('<p><code>merge</code> set to <code>true</code> to retain the received payload and update it with the extracted result</p><p><code>result_key</code> when present the emitted Event data will be nested inside the specified key</p><hr><h3 id="ftpsite-agent" tabindex="-1"><a class="header-anchor" href="#ftpsite-agent"><span>Ftpsite Agent</span></a></h3><p><code>Creates events</code> <code>Receives events</code> <code>Emits file pointer</code></p><p>Ftp Site Agent 检查 FTP 站点，并根据目录中新上载的文件创建事件。当接收到事件时，它会在配置的 FTP 服务器上创建文件。</p><p><code>mode</code> must be present and either <code>read</code> or <code>write</code>, in <code>read</code> mode the agent checks the FTP site for changed files, with <code>write</code> it writes received events to a file on the server.</p><p><strong>Universal options</strong></p><p>Specify a <code>url</code> that represents a directory of an FTP site to watch, and a list of <code>patterns</code> to match against file names.</p><p>Login credentials can be included in <code>url</code> if authentication is required: <code>ftp://username:password@ftp.example.com/path</code>. Liquid formatting is supported as well: <code>ftp://{% credential ftp_credentials %}@ftp.example.com/</code></p><p>Optionally specify the encoding of the files you want to read/write in <code>force_encoding</code>, by default UTF-8 is used.</p><p><strong>Reading</strong></p><p>Only files with a last modification time later than the <code>after</code> value, if specifed, are emitted as event.</p><p><strong>Writing</strong></p><p>Specify the filename to use in <code>filename</code>, Liquid interpolation is possible to change the name per event.</p>',15),Ds={href:"https://github.com/huginn/huginn/wiki/Formatting-Events-using-Liquid",target:"_blank",rel:"noopener noreferrer"},_s=(0,a.QD)("code",null,"data",-1),ws=(0,a.QD)("code",null,"CsvAgent",-1),As=(0,a.QD)("code",null,"PostAgent",-1),Qs=(0,a.QD)("code",null,"ReadFileAgent",-1),xs={href:"https://github.com/huginn/huginn/wiki/How-Huginn-works-with-files",target:"_blank",rel:"noopener noreferrer"},Ys=(0,a.QD)("hr",{class:"footnotes-sep"},null,-1),Ss={class:"footnotes"},Es={class:"footnotes-list"},Ts={id:"footnote1",class:"footnote-item"},Rs={href:"https://blog.csdn.net/qq_36822217/article/details/103156327",target:"_blank",rel:"noopener noreferrer"},Ls=(0,a.QD)("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1),Is={id:"footnote2",class:"footnote-item"},Cs={href:"https://github.com/huginn/huginn/issues/2410",target:"_blank",rel:"noopener noreferrer"},Hs=(0,a.QD)("a",{href:"#footnote-ref2",class:"footnote-backref"},"↩︎",-1),Ps={id:"footnote3",class:"footnote-item"},js={href:"https://github.com/huginn/huginn/issues/1618",target:"_blank",rel:"noopener noreferrer"},Ns=(0,a.QD)("a",{href:"#footnote-ref3",class:"footnote-backref"},"↩︎",-1),Os={},Ks=(0,s(9720).c)(Os,[["render",function(e,n){const s=(0,a.E1)("ExternalLinkIcon");return(0,a.Wz)(),(0,a.An)("div",null,[(0,a.QD)("ul",null,[(0,a.QD)("li",null,[(0,a.mY)("Huginn 部署：查看 "),(0,a.QD)("a",o,[(0,a.mY)("deploy Huginn inside of Docker"),(0,a.K2)(s)]),(0,a.mY)(" 和 "),(0,a.QD)("a",i,[(0,a.mY)(".env 设置"),(0,a.K2)(s)]),(0,a.mY)("，或按下方的教程手动部署到服务器上，轻量使用推荐部署到 Docker。")]),(0,a.QD)("li",null,[(0,a.mY)("Huginn 抓取教程："),(0,a.QD)("a",l,[(0,a.mY)("RSS 进阶篇：Huginn - 真·为任意网页定制 RSS 源（PhantomJs 抓取）"),(0,a.K2)(s)])])]),c,(0,a.QD)("p",null,[(0,a.QD)("a",r,[(0,a.mY)("Huginn Agents"),(0,a.K2)(s)]),(0,a.mY)("：")]),p,(0,a.QD)("p",null,[(0,a.mY)((0,t.WA)(e.created_at)+" 为自带抓取时间，Agent 设置中的特殊字符",1),d,(0,a.mY)("，需要用反义符"),u,(0,a.mY)("。")]),m,(0,a.QD)("p",null,[(0,a.mY)("部署环境：Ubuntu 18.04 的 Docker 镜像（同样适用于服务器） 安装参考："),(0,a.QD)("a",g,[(0,a.mY)("Manual Installation on Debian/Ubuntu"),(0,a.K2)(s)]),(0,a.mY)("，"),(0,a.QD)("a",h,[(0,a.mY)("Novice-setup-guide"),(0,a.K2)(s)]),(0,a.mY)(" 手动升级："),(0,a.QD)("a",v,[(0,a.mY)("manual Update"),(0,a.K2)(s)])]),b,(0,a.QD)("p",null,[k,(0,a.mY)(" 设置 huginn 环境依赖，更多选项查看 "),(0,a.QD)("a",f,[(0,a.mY)(".env 设置案例"),(0,a.K2)(s)]),(0,a.mY)("。编辑器为上面安装的 vim，"),y,(0,a.mY)(" 在光标所在的位置插入，"),q,(0,a.mY)(" 退出编辑，"),D,(0,a.mY)(" 保存并退出。")]),_,(0,a.QD)("p",null,[(0,a.mY)("Huginn "),(0,a.QD)("a",w,[(0,a.mY)("multi-process"),(0,a.K2)(s)]),(0,a.mY)(" 镜像基于 Ubuntu 18.04，没有 root 权限。如果不导出卷，或者使用单独的数据库容器，则无法在不丢失数据的情况下更新 Huginn。可以手动设置数据库对外端口和外部存储路径。")]),A,(0,a.QD)("p",null,[(0,a.mY)("Event Formatting Agent 允许您格式化传入的事件，根据需要添加新的字段。可以用正则来替换输入中的某些元素。具体样例参考，"),(0,a.QD)("a",Q,[(0,a.mY)("新京报 #5 清理版面字段格式"),(0,a.K2)(s)]),(0,a.mY)("。")]),x,(0,a.QD)("p",null,[(0,a.mY)("Have a look at the "),(0,a.QD)("a",Y,[(0,a.mY)("Wiki"),(0,a.K2)(s)]),(0,a.mY)(" to learn more about liquid templating.")]),S,(0,a.QD)("p",null,[(0,a.mY)("Adioso Agent 可以查询两个城市间，在指定时间内的最低飞机票价格。机票价格货币是美元。查询日期 "),E,(0,a.mY)(" 和 "),T,(0,a.mY)(" 之间的差异需小于 150 天。需要注册 "),(0,a.QD)("a",R,[(0,a.mY)("Adioso"),(0,a.K2)(s)]),(0,a.mY)("，并在 "),L,(0,a.mY)(" and "),I,(0,a.mY)(" 中输入。")]),C,H,P,j,(0,a.QD)("p",null,[(0,a.mY)("操作说明： Provide the "),N,(0,a.mY)(" for the API endpoint that you’d like to hit. For example, for all active packages, enter "),O,(0,a.mY)(" (see "),(0,a.QD)("a",K,[(0,a.mY)("https://www.aftership.com/docs/api/4/trackings"),(0,a.K2)(s)]),(0,a.mY)("), for a specific package, use "),F,(0,a.mY)(" and replace "),M,(0,a.mY)(" with a courier code and "),U,(0,a.mY)(" with the tracking number. You can request last checkpoint of a package by providing "),B,(0,a.mY)(" instead.")]),z,G,W,V,J,(0,a.QD)("p",null,[X,(0,a.mY)(),$,(0,a.mY)(),Z,(0,a.QD)("a",ee,[(0,a.mY)("huginn_algorithmia_agent"),(0,a.K2)(s)])]),(0,a.QD)("p",null,[(0,a.mY)("AlgoritmiaAgent 运行 Algorithmia 中的算法。在使用此代理之前，您需要注册一个"),(0,a.QD)("a",ne,[(0,a.mY)("Algorithmia"),(0,a.K2)(s)]),(0,a.mY)("帐户。")]),se,(0,a.QD)("p",null,[(0,a.mY)("To be able to use this Agent you need to authenticate with 37signals in the "),(0,a.QD)("a",ae,[(0,a.mY)("Services"),(0,a.K2)(s)]),(0,a.mY)(" section first.")]),te,oe,(0,a.QD)("p",null,[ie,(0,a.mY)(),le,(0,a.mY)(),ce,(0,a.QD)("a",re,[(0,a.mY)("huginn_bigquery_agent"),(0,a.K2)(s)])]),pe,de,(0,a.QD)("ol",null,[(0,a.QD)("li",null,[(0,a.mY)("Visit "),(0,a.QD)("a",ue,[(0,a.mY)("the google api console"),(0,a.K2)(s)])]),me,ge,he,ve,be]),ke,(0,a.QD)("p",null,[fe,(0,a.mY)(" - The BigQuery query to run. "),(0,a.QD)("a",ye,[(0,a.mY)("Liquid"),(0,a.K2)(s)]),(0,a.mY)(" formatting is supported to run queries based on receiving events.")]),qe,(0,a.QD)("p",null,[De,(0,a.mY)(" - Maximum number of rows to return. Defaults to unlimited, but results are always "),(0,a.QD)("a",_e,[(0,a.mY)("limited to 10 MB"),(0,a.K2)(s)]),(0,a.mY)(".")]),we,(0,a.QD)("p",null,[Ae,(0,a.mY)(),Qe,(0,a.mY)(" - The private key (value of "),xe,(0,a.mY)(" from the downloaded file). "),(0,a.QD)("a",Ye,[(0,a.mY)("Liquid"),(0,a.K2)(s)]),(0,a.mY)(" formatting is supported if you want to use a Credential. (E.g., "),Se,(0,a.mY)(")")]),Ee,(0,a.QD)("p",null,[Te,(0,a.mY)(" specifies a "),(0,a.QD)("a",Re,[(0,a.mY)("Liquid"),(0,a.K2)(s)]),(0,a.mY)(" template that expands to the property to be watched, where you can use a variable "),Le,(0,a.mY)(" for the last property value. If you want to detect a new lowest price, try this: "),Ie]),Ce,(0,a.QD)("p",null,[(0,a.mY)("Here's a tip: you can use "),(0,a.QD)("a",He,[(0,a.mY)("Liquid"),(0,a.K2)(s)]),(0,a.mY)(" templating to dynamically determine the action type. For example:")]),Pe,(0,a.QD)("p",null,[(0,a.mY)("This agent can consume a ‘file pointer’ event from the following agents with no additional configuration: "),je,(0,a.mY)(", "),Ne,(0,a.mY)(", "),Oe,(0,a.mY)(". Read more about the concept in the "),(0,a.QD)("a",Ke,[(0,a.mY)("wiki"),(0,a.K2)(s)]),(0,a.mY)(".")]),(0,a.QD)("p",null,[(0,a.mY)("When receiving the CSV data in a regular event use "),(0,a.QD)("a",Fe,[(0,a.mY)("JSONPath"),(0,a.K2)(s)]),(0,a.mY)(" to select the path in "),Me,(0,a.mY)(". "),Ue,(0,a.mY)(" is only used when the received event does not contain a 'file pointer'.")]),Be,ze,Ge,(0,a.QD)("p",null,[(0,a.mY)("Use "),(0,a.QD)("a",We,[(0,a.mY)("JSONPath"),(0,a.K2)(s)]),(0,a.mY)(" in "),Ve,(0,a.mY)(" to select with part of the received events should be serialized.")]),Je,(0,a.QD)("ul",null,[Xe,$e,(0,a.QD)("li",null,[Ze,(0,a.mY)(" - A JSON object representing a mapping between item output keys and incoming event values. Use "),(0,a.QD)("a",en,[(0,a.mY)("Liquid"),(0,a.K2)(s)]),(0,a.mY)(" to format the values. Values of the "),nn,(0,a.mY)(", "),sn,(0,a.mY)(", "),an,(0,a.mY)(" and "),tn,(0,a.mY)(" keys will be put into the "),on,(0,a.mY)(" section of RSS output. Value of the "),ln,(0,a.mY)(" key will be used as URL for this feed itself, which is useful when you serve it via reverse proxy. The "),cn,(0,a.mY)(" key will be repeated for every Event. The "),rn,(0,a.mY)(" key for each item will have the creation time of the Event unless given.")]),pn,dn,(0,a.QD)("li",null,[un,(0,a.mY)(" - Add "),(0,a.QD)("a",mn,[(0,a.mY)("yahoo media namespace"),(0,a.K2)(s)]),(0,a.mY)(" in output xml")]),(0,a.QD)("li",null,[gn,(0,a.mY)(" - Add "),(0,a.QD)("a",hn,[(0,a.mY)("itunes compatible namespace"),(0,a.K2)(s)]),(0,a.mY)(" in output xml")]),vn,bn,(0,a.QD)("li",null,[kn,(0,a.mY)(" - Set to a list of PubSubHubbub endpoints you want to publish an update to every time this agent receives an event. (default: none) Popular hubs include "),(0,a.QD)("a",fn,[(0,a.mY)("Superfeedr"),(0,a.K2)(s)]),(0,a.mY)(" and "),(0,a.QD)("a",yn,[(0,a.mY)("Google"),(0,a.K2)(s)]),(0,a.mY)(". Note that publishing updates will make your feed URL known to the public, so if you want to keep it secret, set up a reverse proxy to serve your feed via a safe URL and specify it in "),qn,(0,a.mY)(".")])]),Dn,(0,a.QD)("p",null,[(0,a.mY)("In "),(0,a.QD)("a",_n,[(0,a.mY)("Liquid"),(0,a.K2)(s)]),(0,a.mY)(" templating, the following variable is available:")]),wn,(0,a.QD)("p",null,[(0,a.mY)("The resulting Event will have a payload message of "),An,(0,a.mY)(". You can use liquid templating in the "),Qn,(0,a.mY)(", have a look at the "),(0,a.QD)("a",xn,[(0,a.mY)("Wiki"),(0,a.K2)(s)]),(0,a.mY)(" for details.")]),Yn,(0,a.QD)("p",null,[Sn,(0,a.mY)(),En,(0,a.mY)(),Tn,(0,a.mY)(),Rn,(0,a.QD)("a",Ln,[(0,a.mY)("huginn_dkt_curation_agents"),(0,a.K2)(s)]),(0,a.mY)(" 使用 DKT APIs，其中含有多个 agents，具体查看上方链接。")]),In,Cn,(0,a.QD)("p",null,[(0,a.mY)("The Agent accepts all configuration options of the "),Hn,(0,a.mY)(" endpoint as of september 2016, have a look at the "),(0,a.QD)("a",Pn,[(0,a.mY)("offical documentation"),(0,a.K2)(s)]),(0,a.mY)(" if you need additional information")]),(0,a.QD)("p",null,[(0,a.mY)("All Agent configuration options are interpolated using "),(0,a.QD)("a",jn,[(0,a.mY)("Liquid"),(0,a.K2)(s)]),(0,a.mY)(" in the context of the received event.")]),Nn,(0,a.QD)("p",null,[On,(0,a.mY)(" use "),(0,a.QD)("a",Kn,[(0,a.mY)("Liquid"),(0,a.K2)(s)]),(0,a.mY)(" templating to specify the input .arff file. See "),(0,a.QD)("a",Fn,[(0,a.mY)("http://www.cs.waikato.ac.nz/ml/weka/arff.html"),(0,a.K2)(s)]),(0,a.mY)(" for an explanation of this format.")]),Mn,(0,a.QD)("p",null,[(0,a.mY)("This agent can consume a ‘file pointer’ event from the following agents with no additional configuration: "),Un,(0,a.mY)(", "),Bn,(0,a.mY)(", "),zn,(0,a.mY)(". Read more about the concept in the "),(0,a.QD)("a",Gn,[(0,a.mY)("wiki"),(0,a.K2)(s)]),(0,a.mY)(".")]),Wn,Vn,Jn,(0,a.QD)("p",null,[(0,a.mY)("DropboxFileUrlAgent 用于使用 Dropbox。它需要一个文件路径（或多个文件路径），并通过"),(0,a.QD)("a",Xn,[(0,a.mY)("临时链接"),(0,a.K2)(s)]),(0,a.mY)("或"),(0,a.QD)("a",$n,[(0,a.mY)("永久链接"),(0,a.K2)(s)]),(0,a.mY)("发送事件。")]),Zn,(0,a.QD)("p",null,[(0,a.mY)("你可以通过提供"),es,(0,a.mY)("选项来指定邮件的主题行，该选项可以包含"),(0,a.QD)("a",ns,[(0,a.mY)("Liquid"),(0,a.K2)(s)]),(0,a.mY)("的格式。例如，你可以提供"),ss,(0,a.mY)("来设置一个简单的主题，或者"),as,(0,a.mY)("来使用传入事件中的"),ts,(0,a.mY)("键。")]),os,(0,a.QD)("p",null,[(0,a.mY)("Visit "),(0,a.QD)("a",is,[(0,a.mY)("Evernote"),(0,a.K2)(s)]),(0,a.mY)(" to set up an Evernote app and receive an api key and secret. Store these in the Evernote environment variables in the .env file. You will also need to create a "),(0,a.QD)("a",ls,[(0,a.mY)("Sandbox"),(0,a.K2)(s)]),(0,a.mY)(" account to use during development.")]),(0,a.QD)("p",null,[(0,a.mY)("Next, you'll need to authenticate with Evernote in the "),(0,a.QD)("a",cs,[(0,a.mY)("Services"),(0,a.K2)(s)]),(0,a.mY)(" section.")]),rs,(0,a.QD)("p",null,[ps,(0,a.mY)(),ds,(0,a.mY)(),us,(0,a.mY)(),(0,a.QD)("a",ms,[(0,a.mY)("huginn_freme_enrichment_agents"),(0,a.K2)(s)]),(0,a.mY)(" 使用 FREME APIs，其中含有多个 agents，具体查看上方链接。")]),gs,(0,a.QD)("p",null,[(0,a.mY)("The Agent accepts all configuration options of the "),hs,(0,a.mY)(" endpoint as of September 2016, have a look at the "),(0,a.QD)("a",vs,[(0,a.mY)("offical documentation"),(0,a.K2)(s)]),(0,a.mY)(" if you need additional information.")]),(0,a.QD)("p",null,[(0,a.mY)("All Agent configuration options are interpolated using "),(0,a.QD)("a",bs,[(0,a.mY)("Liquid"),(0,a.K2)(s)]),(0,a.mY)(" in the context of the received event.")]),ks,(0,a.QD)("p",null,[fs,(0,a.mY)(" allows to post-process the results using a pre-configured SPARQL filter. Check the "),(0,a.QD)("a",ys,[(0,a.mY)("official documentation"),(0,a.K2)(s)]),(0,a.mY)(" for details.")]),qs,(0,a.QD)("p",null,[(0,a.mY)("Use "),(0,a.QD)("a",Ds,[(0,a.mY)("Liquid"),(0,a.K2)(s)]),(0,a.mY)(" templating in "),_s,(0,a.mY)(" to specify which part of the received event should be written.")]),(0,a.QD)("p",null,[(0,a.mY)("This agent only emits a ‘file pointer’, not the data inside the files, the following agents can consume the created events: "),ws,(0,a.mY)(", "),As,(0,a.mY)(", "),Qs,(0,a.mY)(". Read more about the concept in the "),(0,a.QD)("a",xs,[(0,a.mY)("wiki"),(0,a.K2)(s)]),(0,a.mY)(".")]),Ys,(0,a.QD)("section",Ss,[(0,a.QD)("ol",Es,[(0,a.QD)("li",Ts,[(0,a.QD)("p",null,[(0,a.QD)("a",Rs,[(0,a.mY)("ERROR 2002 (HY000)"),(0,a.K2)(s)]),(0,a.mY)(),Ls])]),(0,a.QD)("li",Is,[(0,a.QD)("p",null,[(0,a.QD)("a",Cs,[(0,a.mY)("rake export hangs"),(0,a.K2)(s)]),(0,a.mY)(),Hs])]),(0,a.QD)("li",Ps,[(0,a.QD)("p",null,[(0,a.QD)("a",js,[(0,a.mY)("Huginn failed to restart after installed node and systemd"),(0,a.K2)(s)]),(0,a.mY)(),Ns])])])])])}]]),Fs=JSON.parse('{"path":"/services/Huginn.html","title":"Huginn","lang":"zh-CN","frontmatter":{"article":false,"title":"Huginn","icon":"customize","order":3,"description":" Huginn 部署：查看 deploy Huginn inside of Docker 和 .env 设置，或按下方的教程手动部署到服务器上，轻量使用推荐部署到 Docker。 Huginn 抓取教程：RSS 进阶篇：Huginn - 真·为任意网页定制 RSS 源（PhantomJs 抓取） 常用 Agent Huginn Agents： Webs...","head":[["meta",{"property":"og:url","content":"https://newzone.top/services/Huginn.html"}],["meta",{"property":"og:site_name","content":"LearnData-开源笔记"}],["meta",{"property":"og:title","content":"Huginn"}],["meta",{"property":"og:description","content":" Huginn 部署：查看 deploy Huginn inside of Docker 和 .env 设置，或按下方的教程手动部署到服务器上，轻量使用推荐部署到 Docker。 Huginn 抓取教程：RSS 进阶篇：Huginn - 真·为任意网页定制 RSS 源（PhantomJs 抓取） 常用 Agent Huginn Agents： Webs..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-16T06:54:57.000Z"}],["meta",{"property":"article:author","content":"清顺"}],["meta",{"property":"article:modified_time","content":"2024-02-16T06:54:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Huginn\\",\\"description\\":\\" Huginn 部署：查看 deploy Huginn inside of Docker 和 .env 设置，或按下方的教程手动部署到服务器上，轻量使用推荐部署到 Docker。 Huginn 抓取教程：RSS 进阶篇：Huginn - 真·为任意网页定制 RSS 源（PhantomJs 抓取） 常用 Agent Huginn Agents： Webs...\\"}"]]},"headers":[{"level":2,"title":"常用 Agent","slug":"常用-agent","link":"#常用-agent","children":[]},{"level":2,"title":"Huginn 部署","slug":"huginn-部署","link":"#huginn-部署","children":[{"level":3,"title":"Ubuntu 手动部署","slug":"ubuntu-手动部署","link":"#ubuntu-手动部署","children":[]},{"level":3,"title":"Huginn Docker","slug":"huginn-docker","link":"#huginn-docker","children":[]}]},{"level":2,"title":"Agents","slug":"agents","link":"#agents","children":[{"level":3,"title":"Trigger Agent","slug":"trigger-agent","link":"#trigger-agent","children":[]},{"level":3,"title":"Liquid Output Agent","slug":"liquid-output-agent","link":"#liquid-output-agent","children":[]},{"level":3,"title":"Event Formatting Agent","slug":"event-formatting-agent","link":"#event-formatting-agent","children":[]},{"level":3,"title":"Adioso Agent - 机票价格追踪","slug":"adioso-agent-机票价格追踪","link":"#adioso-agent-机票价格追踪","children":[]},{"level":3,"title":"Aftership Agent - 物流追踪-API 付费","slug":"aftership-agent-物流追踪-api-付费","link":"#aftership-agent-物流追踪-api-付费","children":[]},{"level":3,"title":"Algorithmia Agent - AI 算法","slug":"algorithmia-agent-ai-算法","link":"#algorithmia-agent-ai-算法","children":[]},{"level":3,"title":"Attribute Difference Agent - 属性差异（待深入理解）","slug":"attribute-difference-agent-属性差异-待深入理解","link":"#attribute-difference-agent-属性差异-待深入理解","children":[]},{"level":3,"title":"Basecamp Agent - Service 停用","slug":"basecamp-agent-service-停用","link":"#basecamp-agent-service-停用","children":[]},{"level":3,"title":"Bigquery Agent - 大型数据库分析","slug":"bigquery-agent-大型数据库分析","link":"#bigquery-agent-大型数据库分析","children":[]},{"level":3,"title":"Boxcar Agent - iPhone 通知栏 app","slug":"boxcar-agent-iphone-通知栏-app","link":"#boxcar-agent-iphone-通知栏-app","children":[]},{"level":3,"title":"Change Detector Agent - 监测数据变化","slug":"change-detector-agent-监测数据变化","link":"#change-detector-agent-监测数据变化","children":[]},{"level":3,"title":"Commander Agent - 触发命令","slug":"commander-agent-触发命令","link":"#commander-agent-触发命令","children":[]},{"level":3,"title":"Csv Agent - CSV 表格数据处理","slug":"csv-agent-csv-表格数据处理","link":"#csv-agent-csv-表格数据处理","children":[]},{"level":3,"title":"Data Output Agent - 网页输出数据（RSS）","slug":"data-output-agent-网页输出数据-rss","link":"#data-output-agent-网页输出数据-rss","children":[]},{"level":3,"title":"De Duplication Agent - 数据去重","slug":"de-duplication-agent-数据去重","link":"#de-duplication-agent-数据去重","children":[]},{"level":3,"title":"Delay Agent - 缓冲存储区","slug":"delay-agent-缓冲存储区","link":"#delay-agent-缓冲存储区","children":[]},{"level":3,"title":"Digest Agent - 摘要汇总 - 未理解","slug":"digest-agent-摘要汇总-未理解","link":"#digest-agent-摘要汇总-未理解","children":[]},{"level":3,"title":"Dkt Clustering Agent - 数据挖掘算法？","slug":"dkt-clustering-agent-数据挖掘算法","link":"#dkt-clustering-agent-数据挖掘算法","children":[]},{"level":3,"title":"Dropbox File Url","slug":"dropbox-file-url","link":"#dropbox-file-url","children":[]},{"level":3,"title":"Dropbox Watch Agent","slug":"dropbox-watch-agent","link":"#dropbox-watch-agent","children":[]},{"level":3,"title":"Email Agent","slug":"email-agent","link":"#email-agent","children":[]},{"level":3,"title":"Email Digest Agent - 邮件摘要","slug":"email-digest-agent-邮件摘要","link":"#email-digest-agent-邮件摘要","children":[]},{"level":3,"title":"Evernote Agent","slug":"evernote-agent","link":"#evernote-agent","children":[]},{"level":3,"title":"Freme Explore Agent - SPARQL-数据断点？","slug":"freme-explore-agent-sparql-数据断点","link":"#freme-explore-agent-sparql-数据断点","children":[]},{"level":3,"title":"Ftpsite Agent","slug":"ftpsite-agent","link":"#ftpsite-agent","children":[]}]}],"git":{"createdTime":1708066497000,"updatedTime":1708066497000,"contributors":[{"name":"ztinan1","email":"160204293+ztinan1@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":27.27,"words":8182},"filePathRelative":"services/Huginn.md","localizedDate":"2024年2月16日","excerpt":"<ul>\\n<li>Huginn 部署：查看 <a href=\\"https://github.com/huginn/huginn/blob/master/doc/docker/install.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">deploy Huginn inside of Docker</a> 和 <a href=\\"https://github.com/huginn/huginn/blob/master/.env.example\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">.env 设置</a>，或按下方的教程手动部署到服务器上，轻量使用推荐部署到 Docker。</li>\\n<li>Huginn 抓取教程：<a href=\\"https://newzone.top/posts/2018-10-07-huginn_scraping_any_website.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">RSS 进阶篇：Huginn - 真·为任意网页定制 RSS 源（PhantomJs 抓取）</a></li>\\n</ul>","autoDesc":true}')}}]);