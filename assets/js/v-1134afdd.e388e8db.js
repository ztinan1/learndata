"use strict";(self.webpackChunklearn_data=self.webpackChunklearn_data||[]).push([[3896],{9720:(n,e)=>{e.c=(n,e)=>{const t=n.__vccOpts||n;for(const[n,a]of e)t[n]=a;return t}},9584:(n,e,t)=>{t.r(e),t.d(e,{comp:()=>x,data:()=>z});var a=t(3968);const s=(0,a.QD)("p",null,[(0,a.mY)("烧制网页 RSS 源，主要有 "),(0,a.QD)("strong",null,"FEED43"),(0,a.mY)(" 和 "),(0,a.QD)("strong",null,"Huginn"),(0,a.mY)(" 两种方法。")],-1),o=(0,a.QD)("ul",null,[(0,a.QD)("li",null,"FEED43：简单免费，六小时抓取一次，每次抓取 20 条静态页面。"),(0,a.QD)("li",null,[(0,a.mY)("Huginn：自由度高，能自定义"),(0,a.QD)("strong",null,"抓取频率、内容结构、js 结果、输出样式"),(0,a.mY)("等；需要搭建服务器，学习 Huginn 抓取规则。")])],-1),i=(0,a.QD)("h2",{id:"huginn-准备工作",tabindex:"-1"},[(0,a.QD)("a",{class:"header-anchor",href:"#huginn-准备工作"},[(0,a.QD)("span",null,"Huginn 准备工作")])],-1),p=(0,a.QD)("li",null,[(0,a.QD)("p",null,"准备 NAS 或 Debian/Ubuntu 环境的服务器；")],-1),r={href:"https://github.com/huginn/huginn/blob/master/doc/docker/install.md",target:"_blank",rel:"noopener noreferrer"},l={href:"https://github.com/huginn/huginn/blob/master/doc/manual/installation.md",target:"_blank",rel:"noopener noreferrer"},c={href:"https://phantomjscloud.com/",target:"_blank",rel:"noopener noreferrer"},u=(0,a.QD)("strong",null,"PhantomJs Cloud",-1),g=(0,a.QD)("figure",null,[(0,a.QD)("img",{src:"https://img.newzone.top/20181006010447.png?imageMogr2/format/webp",alt:"",tabindex:"0",loading:"lazy"}),(0,a.QD)("figcaption")],-1),d=(0,a.IL)('<h2 id="phantomjs-网页抓取" tabindex="-1"><a class="header-anchor" href="#phantomjs-网页抓取"><span>PhantomJs 网页抓取</span></a></h2><p>新建 Huginn 任务组 Scenario「国内应急新闻」，样例抓取链接为 <code>http://www.cneb.gov.cn/guoneinews/</code>。注意，某些链接，特别是小城市的地方网站，即使缓存后也可能无法打开。这通常是由于数据通过第三方链接注入造成的。你可以利用网页浏览器工具定位到真正的数据链接再进行抓取。</p><figure><img src="https://img.newzone.top/20181008131549.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="页面缓存" tabindex="-1"><a class="header-anchor" href="#页面缓存"><span>页面缓存</span></a></h3><p>使用 Phantom Js Cloud Agent，获得动态网页缓存。</p><figure><img src="https://img.newzone.top/20181008111704.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="解析网页内容" tabindex="-1"><a class="header-anchor" href="#解析网页内容"><span>解析网页内容</span></a></h3><p>使用 WebsiteAgent，抓取网页内容。</p><figure><img src="https://img.newzone.top/20181008112658.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="获取内容路径" tabindex="-1"><a class="header-anchor" href="#获取内容路径"><span>获取内容路径</span></a></h3><p>使用火狐浏览器打开目标页面，获取 css path 路径。如果你使用的是 Xpath 路径，请将路径中的双引号替换为单引号，或者用反义符 <code>\\</code> 注释掉路径中的双引号。</p><ol><li><p>按下 <code>F12</code>, 然后点击 <em>Developer Tools</em> 左上角的<em>检查指针</em>。</p><figure><img src="https://img.newzone.top/20181008114911.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>选中要抓取的部分。</p><figure><img src="https://img.newzone.top/20181008113925.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>回到 <em>Developer Tools</em> 窗口，右键选中的蓝色部分，获取 css path、Xpath。这里以 css path 为例。</p><figure><img src="https://img.newzone.top/20181008114207.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>初始 css path 路径，<code>html body div.area.areabg1 div.area-half.right div.tabBox div.tabContents.active table tbody tr td.red a</code>。</p></li><li><p>css path 原始路径过长，删去不带 <code>.</code> 或 <code>#</code> 的节点（节点间以空格“ ”分割），并删去每个节点在 <code>.</code> 或 <code>#</code> 前的第一个标签，得到 <code>.area.areabg1 .area-half.right .tabBox .tabContents.active .red a</code>。</p></li><li><p>前半部分对节点定位无用，继续省略（比如：中国上海，省略掉中国，大家也知道上海在哪），获得短路径 <code>.tabContents.active .red a</code>。</p></li></ol><p><strong>特殊路径处理</strong>：</p><ul><li>有些路径中的<strong>节点带空格</strong>，如 <code>&lt;div class=&quot;packery-item article&quot;&gt;</code>,路径中的空格由 <code>.</code> 代替，截取为 <code>.packery-item.article</code>。</li><li>当抓取<strong>多种 css path 规则</strong>时，用逗号分割，比如 <code>&quot;css&quot;: &quot;.focus-title .current a , .stress h2 a&quot;,</code>。</li><li>有时节点路径输入正确，但输出为空。此时，将路径更改为 <code>html</code>，检查源码中是否含有你需要的内容。动态页面直接获取会为空，你需要使用 PhantomJs Cloud 来缓存页面。</li></ul><h3 id="导出-rss" tabindex="-1"><a class="header-anchor" href="#导出-rss"><span>导出 RSS</span></a></h3><p>使用 DataOutputAgent，将抓取内容导出为 RSS。</p><figure><img src="https://img.newzone.top/20181008130943.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>回到 Scenarios，点击 Data Output Agent 旁的按钮「Actions」&gt;「Show」，复制导出的 xml 链接 <code>http://xxx.xxx/users/1/web_requests/xxx/xxxx.xml</code>。</p><figure><img src="https://img.newzone.top/20181008131059.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',19),m={href:"https://pan.baidu.com/s/1JdsFkLN9kczR9C92tKi83A",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/huginn/huginn/wiki/Browser-Emulation-Using-PhantomJs-Cloud",target:"_blank",rel:"noopener noreferrer"},b={href:"https://wechat.privacyhide.com/",target:"_blank",rel:"noopener noreferrer"},f=(0,a.QD)("h2",{id:"跳转链接处理示例",tabindex:"-1"},[(0,a.QD)("a",{class:"header-anchor",href:"#跳转链接处理示例"},[(0,a.QD)("span",null,"跳转链接处理示例")])],-1),k=(0,a.QD)("p",null,"要获取跳转链接的真实地址，可以使用 WebsiteAgent 直接读取原网页的 HTML 代码，并检查其中的跳转代码。",-1),v=(0,a.IL)('<p>跳转代码通常位于<code>&lt;script&gt;</code>标签内。由于<code>&lt;script&gt;</code>标签内的内容是文本，而非 HTML 属性，我们不能使用属性选择器（如@href）。相反，我们应使用 XPath 的<code>string()</code>函数来提取整个<code>&lt;script&gt;</code>标签的文本内容。之后，可以利用 EventFormattingAgent 的正则表达式从这些文本中提取 URL。</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code># WebsiteAgent\n<span class="token punctuation">{</span>\n  <span class="token property">&quot;expected_update_period_in_days&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://www.chncpa.org/ycxm/202308/t20230817_254985.html&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;html&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;mode&quot;</span><span class="token operator">:</span> <span class="token string">&quot;on_change&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;extract&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;xpath&quot;</span><span class="token operator">:</span> <span class="token string">&quot;//script&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;string(.)&quot;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n# EventFormattingAgent\n<span class="token punctuation">{</span>\n  <span class="token property">&quot;instructions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;jumpurl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{real_url.1}}&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;matchers&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{{url}}&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;regexp&quot;</span><span class="token operator">:</span> <span class="token string">&quot;window\\\\.location\\\\.href\\\\s*=\\\\s*\\\\\\\\?[\\&quot;&#39;]([^\\&quot;&#39;]+?)(?:\\\\\\\\?[\\&quot;&#39;]);&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;to&quot;</span><span class="token operator">:</span> <span class="token string">&quot;real_url&quot;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;mode&quot;</span><span class="token operator">:</span> <span class="token string">&quot;clean&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rss-合集" tabindex="-1"><a class="header-anchor" href="#rss-合集"><span>RSS 合集</span></a></h2><p>汇总的 RSS 永久订阅 feeds，均通过 RSSHub 和 Huginn 制作。如果有兴趣自制 RSS，可参考以下教程。</p>',4),S={href:"https://newzone.top/posts/2017-04-22-rss_feed43_feedex.html",target:"_blank",rel:"noopener noreferrer"},w={href:"https://newzone.top/posts/2018-10-07-huginn_scraping_any_website.html",target:"_blank",rel:"noopener noreferrer"},D={href:"https://newzone.top/posts/2019-04-01-rsshub_noob.html",target:"_blank",rel:"noopener noreferrer"},q={href:"https://newzone.top/posts/2020-03-25-rsshub_on_vps.html",target:"_blank",rel:"noopener noreferrer"},y={href:"https://newzone.top/posts/2021-10-23-nas_with_rsshub_and_huginn.html",target:"_blank",rel:"noopener noreferrer"},_={href:"https://newzone.top/posts/2022-03-17-rss_persistent_link_collection.html",target:"_blank",rel:"noopener noreferrer"},Q={},x=(0,t(9720).c)(Q,[["render",function(n,e){const t=(0,a.E1)("BiliBili"),Q=(0,a.E1)("ExternalLinkIcon");return(0,a.Wz)(),(0,a.An)("div",null,[s,o,(0,a.K2)(t,{bvid:"BV1k5411B7vF"}),i,(0,a.QD)("ul",null,[p,(0,a.QD)("li",null,[(0,a.QD)("p",null,[(0,a.mY)("参考 "),(0,a.QD)("a",r,[(0,a.mY)("deploy Huginn inside of Docker"),(0,a.K2)(Q)]),(0,a.mY)("、"),(0,a.QD)("a",l,[(0,a.mY)("installation guide for Debian/Ubuntu"),(0,a.K2)(Q)]),(0,a.mY)(" 来搭建 Huginn。")])]),(0,a.QD)("li",null,[(0,a.QD)("p",null,[(0,a.mY)("注册 "),(0,a.QD)("a",c,[(0,a.mY)("PhantomJs Cloud"),(0,a.K2)(Q)]),(0,a.mY)(" ,然后将 API key 保存在 Huginn 的 Credentials 中。很多网站是用 JS 加载动态内容，因此需要 "),u,(0,a.mY)(" 来抓取页面 JS 缓存。免费版每天限制抓取 500 次页面，需求不大可建立多个账号使用不同 API key，足够个人使用。")]),g])]),d,(0,a.QD)("p",null,[(0,a.QD)("a",m,[(0,a.mY)("点击网盘下载"),(0,a.K2)(Q)]),(0,a.mY)("国内应急新闻的详细设置，导入到 Huginn 即可使用。其他问题参考 "),(0,a.QD)("a",h,[(0,a.mY)("PhantomJs Cloud 英文攻略"),(0,a.K2)(Q)]),(0,a.mY)("。")]),(0,a.QD)("p",null,[(0,a.mY)("微信的屏蔽措施非常之多，公众号抓取可以尝试 "),(0,a.QD)("a",b,[(0,a.mY)("wechat-feeds"),(0,a.K2)(Q)]),(0,a.mY)("。")]),f,k,(0,a.K2)(t,{bvid:"BV1ae411v7Qg"}),v,(0,a.QD)("ul",null,[(0,a.QD)("li",null,[(0,a.QD)("p",null,[(0,a.QD)("a",S,[(0,a.mY)("RSS 入门篇：FEED43&FeedEx-为静态网页定制 RSS 源"),(0,a.K2)(Q)])])]),(0,a.QD)("li",null,[(0,a.QD)("p",null,[(0,a.QD)("a",w,[(0,a.mY)("RSS 进阶篇：Huginn - 真·为任意网页定制 RSS 源（PhantomJs 抓取）"),(0,a.K2)(Q)])])]),(0,a.QD)("li",null,[(0,a.QD)("p",null,[(0,a.QD)("a",D,[(0,a.mY)("RSS 速成篇：RSSHub 捡现成的轮子"),(0,a.K2)(Q)])])]),(0,a.QD)("li",null,[(0,a.QD)("p",null,[(0,a.QD)("a",q,[(0,a.mY)("RSS 速成篇 2：RSSHub 自部署"),(0,a.K2)(Q)])])]),(0,a.QD)("li",null,[(0,a.QD)("p",null,[(0,a.QD)("a",y,[(0,a.mY)("RSS 完结篇：节省千元服务费，RSSHub、Huginn 转移 NAS"),(0,a.K2)(Q)])])]),(0,a.QD)("li",null,[(0,a.QD)("p",null,[(0,a.QD)("a",_,[(0,a.mY)("RSS 汇总篇：RSS 永久链接合集，拒绝 RSS 失效"),(0,a.K2)(Q)])])])])])}]]),z=JSON.parse('{"path":"/posts/2018-10-07-huginn_scraping_any_website.html","title":"RSS 进阶篇：Huginn - 真·为任意网页定制 RSS 源（PhantomJs 抓取）","lang":"zh-CN","frontmatter":{"title":"RSS 进阶篇：Huginn - 真·为任意网页定制 RSS 源（PhantomJs 抓取）","date":"2018-10-07T00:00:00.000Z","category":["自动化"],"tag":["Huginn","rss"],"order":-22,"description":"烧制网页 RSS 源，主要有 FEED43 和 Huginn 两种方法。 FEED43：简单免费，六小时抓取一次，每次抓取 20 条静态页面。 Huginn：自由度高，能自定义抓取频率、内容结构、js 结果、输出样式等；需要搭建服务器，学习 Huginn 抓取规则。 ","head":[["meta",{"property":"og:url","content":"https://newzone.top/posts/2018-10-07-huginn_scraping_any_website.html"}],["meta",{"property":"og:site_name","content":"嘲讽南北"}],["meta",{"property":"og:title","content":"RSS 进阶篇：Huginn - 真·为任意网页定制 RSS 源（PhantomJs 抓取）"}],["meta",{"property":"og:description","content":"烧制网页 RSS 源，主要有 FEED43 和 Huginn 两种方法。 FEED43：简单免费，六小时抓取一次，每次抓取 20 条静态页面。 Huginn：自由度高，能自定义抓取频率、内容结构、js 结果、输出样式等；需要搭建服务器，学习 Huginn 抓取规则。 "}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img.newzone.top/20181006010447.png?imageMogr2/format/webp"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-16T06:54:57.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"RSS 进阶篇：Huginn - 真·为任意网页定制 RSS 源（PhantomJs 抓取）"}],["meta",{"property":"article:author","content":"清顺"}],["meta",{"property":"article:tag","content":"Huginn"}],["meta",{"property":"article:tag","content":"rss"}],["meta",{"property":"article:published_time","content":"2018-10-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-16T06:54:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RSS 进阶篇：Huginn - 真·为任意网页定制 RSS 源（PhantomJs 抓取）\\",\\"image\\":[\\"https://img.newzone.top/20181006010447.png?imageMogr2/format/webp\\",\\"https://img.newzone.top/20181008131549.png?imageMogr2/format/webp\\",\\"https://img.newzone.top/20181008111704.png?imageMogr2/format/webp\\",\\"https://img.newzone.top/20181008112658.png?imageMogr2/format/webp\\",\\"https://img.newzone.top/20181008114911.png?imageMogr2/format/webp\\",\\"https://img.newzone.top/20181008113925.png?imageMogr2/format/webp\\",\\"https://img.newzone.top/20181008114207.png?imageMogr2/format/webp\\",\\"https://img.newzone.top/20181008130943.png?imageMogr2/format/webp\\",\\"https://img.newzone.top/20181008131059.png?imageMogr2/format/webp\\"],\\"datePublished\\":\\"2018-10-07T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-16T06:54:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"清顺\\",\\"url\\":\\"https://newzone.top\\"}]}"]]},"headers":[{"level":2,"title":"Huginn 准备工作","slug":"huginn-准备工作","link":"#huginn-准备工作","children":[]},{"level":2,"title":"PhantomJs 网页抓取","slug":"phantomjs-网页抓取","link":"#phantomjs-网页抓取","children":[{"level":3,"title":"页面缓存","slug":"页面缓存","link":"#页面缓存","children":[]},{"level":3,"title":"解析网页内容","slug":"解析网页内容","link":"#解析网页内容","children":[]},{"level":3,"title":"获取内容路径","slug":"获取内容路径","link":"#获取内容路径","children":[]},{"level":3,"title":"导出 RSS","slug":"导出-rss","link":"#导出-rss","children":[]}]},{"level":2,"title":"跳转链接处理示例","slug":"跳转链接处理示例","link":"#跳转链接处理示例","children":[]},{"level":2,"title":"RSS 合集","slug":"rss-合集","link":"#rss-合集","children":[]}],"git":{"createdTime":1708066497000,"updatedTime":1708066497000,"contributors":[{"name":"ztinan1","email":"160204293+ztinan1@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":3.95,"words":1185},"filePathRelative":"_posts/2018-10-07-huginn_scraping_any_website.md","localizedDate":"2018年10月7日","excerpt":"<p>烧制网页 RSS 源，主要有 <strong>FEED43</strong> 和 <strong>Huginn</strong> 两种方法。</p>\\n<ul>\\n<li>FEED43：简单免费，六小时抓取一次，每次抓取 20 条静态页面。</li>\\n<li>Huginn：自由度高，能自定义<strong>抓取频率、内容结构、js 结果、输出样式</strong>等；需要搭建服务器，学习 Huginn 抓取规则。</li>\\n</ul>\\n","autoDesc":true}')}}]);