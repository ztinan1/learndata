"use strict";(self.webpackChunklearn_data=self.webpackChunklearn_data||[]).push([[2360],{9720:(e,o)=>{o.c=(e,o)=>{const t=e.__vccOpts||e;for(const[e,r]of o)t[e]=r;return t}},7544:(e,o,t)=>{t.r(o),t.d(o,{comp:()=>d,data:()=>p});var r=t(3968);const a={href:"https://github.com/awesome-selfhosted/awesome-selfhosted",target:"_blank",rel:"noopener noreferrer"},c=(0,r.QD)("code",null,"docker-compose.yml",-1),s={href:"http://ttrss.henry.wang/zh/#%E9%80%9A%E8%BF%87-docker-compose-%E9%83%A8%E7%BD%B2",target:"_blank",rel:"noopener noreferrer"},n=(0,r.IL)('<p>操作步骤如下：</p><ol><li>打开「控制面板」，选择「终端机和 SNMP」，并开启 SSH 功能。</li><li>使用 putty 或其他 SSH 客户端连接到群晖，并导航到 <code>docker-compose.yml</code> 文件的所在目录，例如：<code>cd /volume3/storage</code>。</li><li>在该目录下，执行 <code>sudo docker-compose up -d</code> 并稍等片刻以完成部署过程。</li><li>为了系统安全，完成操作后不要忘记关闭 SSH 功能。</li></ol><p>注意：root 用户需在命令前添加 <code>sudo</code>，否则可能遇到 <code>Permission denied</code> 的提示。另外，可以使用 <code>sudo -i</code> 来直接获得 root 权限。</p><h2 id="部署问题" tabindex="-1"><a class="header-anchor" href="#部署问题"><span>部署问题</span></a></h2><h3 id="路径对照" tabindex="-1"><a class="header-anchor" href="#路径对照"><span>路径对照</span></a></h3><p>虽然你可以轻易地采用我所分享的 compose 设置进行安装，但对于 volumes 部分，你需要重点关注本地存储的路径选择。拿 emby 作例，电视剧路径配置可以为 <code>/volume1/tvshows:/data/tvshows</code>。</p><p>在这里，<code>/data/tvshows</code> 是 Docker 的固定内部路径，不能修改。而 <code>/volume1/tvshows</code> 则是你可以根据实际情况自由定义的本地路径。</p><h3 id="用户与组身份" tabindex="-1"><a class="header-anchor" href="#用户与组身份"><span>用户与组身份</span></a></h3><p>UID 和 GID 分别代表用户身份和组身份标识。在启动 Docker 容器时，默认情况下，容器进程是以 root 用户（UID 0）运行。然而，从安全的角度出发，非 root 的运行模式会更加安全，因为这可以在容器受到攻击时，降低攻击者获取主机高权限的风险。在常规的设置中，UID 和 GID 通常被设置为 1000。但例如在群晖系统中，第一个用户的 UID 实际为 1026，而 GID 则为 100。</p><p>值得注意的是，当外部系统的用户标识与 NAS 上的 UID/GID 存在不匹配的情况时，可能会出现权限不一致的问题，进而影响到文件的正常访问权限。</p><h3 id="文件夹访问权限" tabindex="-1"><a class="header-anchor" href="#文件夹访问权限"><span>文件夹访问权限</span></a></h3><p>对于如 Emby 这类依赖外部存储资源的 Docker 服务，文件夹的访问权限是不可或缺的。一个直接的解决方案是将文件夹的权限设置为“所有人”（Everyone）。然而，这样的做法在安全性上存在隐患。一旦有人获得 Docker 的操作权限，相关文件夹很可能会被擅自更改，这只能作为一个短期的权宜之计。</p><p>下图以 Emby 服务中的电视节目存储路径 <code>/volume1/tvshows</code> 为实例，为了确保正常运行，我们可以临时为该文件夹授权“所有人”权限，但建议后续寻求更安全的权限管理策略。</p><figure><img src="https://img.newzone.top/2023-09-16-08-42-22.png?imageMogr2/format/webp" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="编号规则" tabindex="-1"><a class="header-anchor" href="#编号规则"><span>编号规则</span></a></h2><ul><li>1-10：影视音乐类</li><li>11-20：娱乐阅读类</li><li>21-30：同步网盘</li><li>31-40：文档管理</li><li>41-70：空位</li><li>71-80：未分类（默认）</li><li>81-90: 自动化</li><li>91-100：导航</li><li>101+：后端</li></ul>',16),l={class:"catalog-display-container"},i={},d=(0,t(9720).c)(i,[["render",function(e,o){const t=(0,r.E1)("ExternalLinkIcon"),i=(0,r.E1)("AutoCatalog");return(0,r.Wz)(),(0,r.An)("div",null,[(0,r.QD)("p",null,[(0,r.mY)("网络附加存储（NAS）日益重要，它提供了一个平台，可以部署各种 Docker 服务，进而完成个人的自动化工作流程。"),(0,r.QD)("a",a,[(0,r.mY)("awesome-selfhosted"),(0,r.K2)(t)]),(0,r.mY)("可查看多种自部署服务。而使用 "),c,(0,r.mY)(" 文件进行 Docker 部署无疑是其中最为便捷的方法。具体如何使用 docker-compose，可以参考 "),(0,r.QD)("a",s,[(0,r.mY)("TTRSS docker-compose 的教程"),(0,r.K2)(t)]),(0,r.mY)("。")]),n,(0,r.g1)(" markdownlint-disable MD033 "),(0,r.QD)("div",l,[(0,r.K2)(i,{base:"/services/dockers-on-nas/"})]),(0,r.g1)(" markdownlint-enable MD033 ")])}]]),p=JSON.parse('{"path":"/services/dockers-on-nas/","title":"NAS 应用集合","lang":"zh-CN","frontmatter":{"article":false,"index":false,"title":"NAS 应用集合","icon":"process","description":"网络附加存储（NAS）日益重要，它提供了一个平台，可以部署各种 Docker 服务，进而完成个人的自动化工作流程。awesome-selfhosted可查看多种自部署服务。而使用 docker-compose.yml 文件进行 Docker 部署无疑是其中最为便捷的方法。具体如何使用 docker-compose，可以参考 TTRSS docker-c...","head":[["meta",{"property":"og:url","content":"https://newzone.top/services/dockers-on-nas/"}],["meta",{"property":"og:site_name","content":"嘲讽南北"}],["meta",{"property":"og:title","content":"NAS 应用集合"}],["meta",{"property":"og:description","content":"网络附加存储（NAS）日益重要，它提供了一个平台，可以部署各种 Docker 服务，进而完成个人的自动化工作流程。awesome-selfhosted可查看多种自部署服务。而使用 docker-compose.yml 文件进行 Docker 部署无疑是其中最为便捷的方法。具体如何使用 docker-compose，可以参考 TTRSS docker-c..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:image","content":"https://img.newzone.top/2023-09-16-08-42-22.png?imageMogr2/format/webp"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-16T06:54:57.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"NAS 应用集合"}],["meta",{"property":"article:author","content":"清顺"}],["meta",{"property":"article:modified_time","content":"2024-02-16T06:54:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"NAS 应用集合\\",\\"description\\":\\"网络附加存储（NAS）日益重要，它提供了一个平台，可以部署各种 Docker 服务，进而完成个人的自动化工作流程。awesome-selfhosted可查看多种自部署服务。而使用 docker-compose.yml 文件进行 Docker 部署无疑是其中最为便捷的方法。具体如何使用 docker-compose，可以参考 TTRSS docker-c...\\"}"]]},"headers":[{"level":2,"title":"部署问题","slug":"部署问题","link":"#部署问题","children":[{"level":3,"title":"路径对照","slug":"路径对照","link":"#路径对照","children":[]},{"level":3,"title":"用户与组身份","slug":"用户与组身份","link":"#用户与组身份","children":[]},{"level":3,"title":"文件夹访问权限","slug":"文件夹访问权限","link":"#文件夹访问权限","children":[]}]},{"level":2,"title":"编号规则","slug":"编号规则","link":"#编号规则","children":[]}],"git":{"createdTime":1708066497000,"updatedTime":1708066497000,"contributors":[{"name":"ztinan1","email":"160204293+ztinan1@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.79,"words":838},"filePathRelative":"services/dockers-on-nas/README.md","localizedDate":"2024年2月16日","excerpt":"<p>网络附加存储（NAS）日益重要，它提供了一个平台，可以部署各种 Docker 服务，进而完成个人的自动化工作流程。<a href=\\"https://github.com/awesome-selfhosted/awesome-selfhosted\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">awesome-selfhosted</a>可查看多种自部署服务。而使用 <code>docker-compose.yml</code> 文件进行 Docker 部署无疑是其中最为便捷的方法。具体如何使用 docker-compose，可以参考 <a href=\\"http://ttrss.henry.wang/zh/#%E9%80%9A%E8%BF%87-docker-compose-%E9%83%A8%E7%BD%B2\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">TTRSS docker-compose 的教程</a>。</p>","autoDesc":true}')}}]);