"use strict";(self.webpackChunklearn_data=self.webpackChunklearn_data||[]).push([[556],{9720:(o,e)=>{e.c=(o,e)=>{const t=o.__vccOpts||o;for(const[o,n]of e)t[o]=n;return t}},1064:(o,e,t)=>{t.r(e),t.d(e,{comp:()=>g,data:()=>p});var n=t(3968);const r=(0,n.IL)('<p>利用各种插件，VS Code 不仅能够提高编程效率，还极大改善写作体验。尽管现在的 VS Code 配备了配置同步功能，但我在最近一次重装电脑系统后却遭遇了一个意外：VS Code 配置然全部消失了。这个意外促使我撰写这篇文章，作为备忘录。因此，为了避免类似情况的发生，我建议在重新安装系统之前，还是要手动备份你的配置文件，以确保安全。</p><h2 id="写作辅助" tabindex="-1"><a class="header-anchor" href="#写作辅助"><span>写作辅助</span></a></h2><ul><li><strong>AutoCorrect</strong>：这个插件是写作纠错的佼佼者，特别是在处理中英文混排时的空格问题，但它尚未支持中英标点符号的自动转换。</li><li><strong>Pangu-Markdown</strong>：对于想在 Markdown 文档中为超链接和文本之间自动添加空格的用户来说，这个插件是个不错的选择。它也能够在中英文字符之间添加空格，从而优化 Markdown 文档的排版。但 Pangu-Markdown 需要手动唤起命令面板，并应用 <code>Pangu Format</code> 来格式化文本。</li></ul><h2 id="markdown-增强" tabindex="-1"><a class="header-anchor" href="#markdown-增强"><span>Markdown 增强</span></a></h2><ul><li><strong>Markdown All in One</strong>：提供了全面的 Markdown 支持，使写作变得更加高效。</li><li><strong>Markdown Preview Enhanced</strong>：这个插件提供了 Markdown 文件的增强预览功能。</li><li><strong>markdownlint</strong>：用于 Markdown 语法的检查和修正。通过自定义设置，例如在配置文件中添加 <code>&quot;markdownlint.config&quot;: { &quot;MD034&quot;: false }</code>，可以关闭某些可能与其他项目（如 docusaurus3）冲突的特性。</li><li><strong>Word Count CJK</strong>：中英文字符计数工具。</li></ul><h2 id="界面美化" tabindex="-1"><a class="header-anchor" href="#界面美化"><span>界面美化</span></a></h2><ul><li><strong>Blockman</strong>：能够突出显示代码中的嵌套块，增强代码的可读性。如果插件会报错 <code>Error:invalid syntax</code>，则在设置中搜索 <code>N25</code>，关闭 <code>Blockman:N25 Analyze Tags</code>。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></li><li><strong>Color Highlight</strong>：将 CSS 颜色代码直观地显示为相应的颜色。</li><li><strong>indent-rainbow</strong>：通过使用四种不同颜色交替显示，对文本前的缩进进行可视化处理。</li><li><strong>Prettier</strong>：使用定制规则重新格式化代码，以实现一致的代码风格。建议开启文件保存时自动格式化文本的功能。</li><li><strong>Image Preview</strong>：提供文件内的图片预览功能，支持 CSS 和 SVG 格式。</li><li><strong>vscode-icons</strong>：根据文件类型显示相应的图标，使文件浏览更直观。</li><li><strong>File Nesting Updater</strong>：利用 VS Code 的文件嵌套功能，使文件树结构更加整洁。</li></ul><h2 id="代码补全" tabindex="-1"><a class="header-anchor" href="#代码补全"><span>代码补全</span></a></h2><ul><li><strong>Auto Rename Tag</strong>：在重命名一个标签时，自动重命名 HTML 标签的开始和结束标签。避免只修改了开始标签，而忘记修改结束标签。该扩展适用于 HTML、XML、PHP 和 JavaScript。</li><li><strong>Auto Close Tag</strong>：自动输入标签的闭合，提高编码效率。</li><li><strong>Code Spell Checker</strong>：在 VSCode 中检查代码拼写错误，支持变量、函数和注释等。它还允许用户添加自定义词汇，适应特定项目的需求。</li><li><strong>Path Intellisense</strong>：自动补全文件路径，尤其在导入文件时，能够快速提示并完成文件名的输入。</li></ul><hr class="footnotes-sep">',10),a={class:"footnotes"},l={class:"footnotes-list"},s={id:"footnote1",class:"footnote-item"},i={href:"https://github.com/leodevbro/vscode-blockman/issues/43",target:"_blank",rel:"noopener noreferrer"},d=(0,n.QD)("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1),c={},g=(0,t(9720).c)(c,[["render",function(o,e){const t=(0,n.E1)("ExternalLinkIcon");return(0,n.Wz)(),(0,n.An)("div",null,[r,(0,n.QD)("section",a,[(0,n.QD)("ol",l,[(0,n.QD)("li",s,[(0,n.QD)("p",null,[(0,n.QD)("a",i,[(0,n.mY)("Bug: commented RegExp throws invalid syntax error"),(0,n.K2)(t)]),(0,n.mY)(),d])])])])])}]]),p=JSON.parse('{"path":"/apps/tutorials/vscode.html","title":"VS Code","lang":"zh-CN","frontmatter":{"article":false,"title":"VS Code","order":3,"description":"利用各种插件，VS Code 不仅能够提高编程效率，还极大改善写作体验。尽管现在的 VS Code 配备了配置同步功能，但我在最近一次重装电脑系统后却遭遇了一个意外：VS Code 配置然全部消失了。这个意外促使我撰写这篇文章，作为备忘录。因此，为了避免类似情况的发生，我建议在重新安装系统之前，还是要手动备份你的配置文件，以确保安全。 写作辅助 Aut...","head":[["meta",{"property":"og:url","content":"https://newzone.top/apps/tutorials/vscode.html"}],["meta",{"property":"og:site_name","content":"LearnData-开源笔记"}],["meta",{"property":"og:title","content":"VS Code"}],["meta",{"property":"og:description","content":"利用各种插件，VS Code 不仅能够提高编程效率，还极大改善写作体验。尽管现在的 VS Code 配备了配置同步功能，但我在最近一次重装电脑系统后却遭遇了一个意外：VS Code 配置然全部消失了。这个意外促使我撰写这篇文章，作为备忘录。因此，为了避免类似情况的发生，我建议在重新安装系统之前，还是要手动备份你的配置文件，以确保安全。 写作辅助 Aut..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-16T06:54:57.000Z"}],["meta",{"property":"article:author","content":"清顺"}],["meta",{"property":"article:modified_time","content":"2024-02-16T06:54:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"VS Code\\",\\"description\\":\\"利用各种插件，VS Code 不仅能够提高编程效率，还极大改善写作体验。尽管现在的 VS Code 配备了配置同步功能，但我在最近一次重装电脑系统后却遭遇了一个意外：VS Code 配置然全部消失了。这个意外促使我撰写这篇文章，作为备忘录。因此，为了避免类似情况的发生，我建议在重新安装系统之前，还是要手动备份你的配置文件，以确保安全。 写作辅助 Aut...\\"}"]]},"headers":[{"level":2,"title":"写作辅助","slug":"写作辅助","link":"#写作辅助","children":[]},{"level":2,"title":"Markdown 增强","slug":"markdown-增强","link":"#markdown-增强","children":[]},{"level":2,"title":"界面美化","slug":"界面美化","link":"#界面美化","children":[]},{"level":2,"title":"代码补全","slug":"代码补全","link":"#代码补全","children":[]}],"git":{"createdTime":1708066497000,"updatedTime":1708066497000,"contributors":[{"name":"ztinan1","email":"160204293+ztinan1@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.58,"words":774},"filePathRelative":"apps/tutorials/vscode.md","localizedDate":"2024年2月16日","excerpt":"<p>利用各种插件，VS Code 不仅能够提高编程效率，还极大改善写作体验。尽管现在的 VS Code 配备了配置同步功能，但我在最近一次重装电脑系统后却遭遇了一个意外：VS Code 配置然全部消失了。这个意外促使我撰写这篇文章，作为备忘录。因此，为了避免类似情况的发生，我建议在重新安装系统之前，还是要手动备份你的配置文件，以确保安全。</p>\\n<h2>写作辅助</h2>\\n<ul>\\n<li><strong>AutoCorrect</strong>：这个插件是写作纠错的佼佼者，特别是在处理中英文混排时的空格问题，但它尚未支持中英标点符号的自动转换。</li>\\n<li><strong>Pangu-Markdown</strong>：对于想在 Markdown 文档中为超链接和文本之间自动添加空格的用户来说，这个插件是个不错的选择。它也能够在中英文字符之间添加空格，从而优化 Markdown 文档的排版。但 Pangu-Markdown 需要手动唤起命令面板，并应用 <code>Pangu Format</code> 来格式化文本。</li>\\n</ul>","autoDesc":true}')}}]);